package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlDyRpDip;
import vo.AlDyRpDip3Day;
import vo.DetailLostConfig;
import vo.SYS_PARAMETER;
import vo.WarningDipSame;

public class AlDyRpDipDAOImpl extends SqlMapClientDaoSupport implements AlDyRpDipDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_DY_RP_DIP
     *
     * @ibatorgenerated Thu Dec 06 15:39:30 ICT 2012
     */
    public AlDyRpDipDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_DY_RP_DIP
     *
     * @ibatorgenerated Thu Dec 06 15:39:30 ICT 2012
     */
    public void insert(AlDyRpDip record) {
        getSqlMapClientTemplate().insert("AL_DY_RP_DIP.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_DY_RP_DIP
     *
     * @ibatorgenerated Thu Dec 06 15:39:30 ICT 2012
     */
    public void insertSelective(AlDyRpDip record) {
        getSqlMapClientTemplate().insert("AL_DY_RP_DIP.ibatorgenerated_insertSelective", record);
    }

	/*@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpDip> getAllDipInDay(String day, String bscid,
			String site, String dip, String teamProcess, String userProcess,
			int itemN, int totalTimeN, String type, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DAY", day);
		map.put("P_BSCID", bscid);
		map.put("P_SITE", site);
		map.put("P_DIP", dip);
		map.put("P_TEAM_PROCESS", teamProcess);
		map.put("P_USER_PROCESS", userProcess);
		map.put("P_ITEMS", itemN);
		map.put("P_TOTAL_TIME", totalTimeN);
		map.put("P_Status", type);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getAllDipInDay", map);
	}*/
	
	@Override
	public int deleteByPrimaryKey(Integer id) {
		AlDyRpDip key = new AlDyRpDip();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_DY_RP_DIP.deleteByPrimaryKey", key);
        return rows;
	}
	@SuppressWarnings("unchecked")
	@Override
	public AlDyRpDip selectByPrimaryKey(int id) {
		/*AlDyRpDip key = new AlDyRpDip();
        key.setId(id);
        AlDyRpDip record = (AlDyRpDip) getSqlMapClientTemplate().queryForObject("AL_DY_RP_DIP.selectByPrimaryKey", key);
        return record;*/
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", id);
		map.put("P_DATA", null);
		List<AlDyRpDip> recordList = getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.selectByPrimaryKey", map);
		AlDyRpDip record = new AlDyRpDip();
		if (recordList!=null && recordList.size()>0)
		{
			record=recordList.get(0);
		}
		return record;
	}

	@Override
	public int updateByPrimaryKeySelective(AlDyRpDip alDyRpDip) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", alDyRpDip.getId());
		map.put("P_DAY", alDyRpDip.getDay());
		map.put("P_BSCID", alDyRpDip.getBscid());
		/*map.put("P_SITE", alDyRpDip.getSite());*/
		map.put("P_DIP", alDyRpDip.getDip());
		map.put("P_TEAM_PROCESS", alDyRpDip.getTeamProcess());
		map.put("P_USER_PROCESS", alDyRpDip.getUserProcess());
		map.put("P_CAUSEBY_CONTENT", alDyRpDip.getCausebyContent());
		map.put("P_RESULT_CONTENT", alDyRpDip.getResultContent());
		map.put("P_SHIFT_ID", alDyRpDip.getShiftId());
		map.put("P_TRANS_TYPE", alDyRpDip.getTransType());
        int rows = getSqlMapClientTemplate().update("AL_DY_RP_DIP.update", map);
        return rows;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<DetailLostConfig> getDetailLostDip(String bscId, String dip,
			String timer, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", timer);
		map.put("P_BSCID", bscId);
		map.put("P_DIP", dip);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getDetailLostDip", map);
	}

	/*@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpDip> getAllDipInDay(String day, String bscid,
			 String dip, String teamProcess, String userProcess,
			int itemN, int totalTimeN, String type, int count, int order,
			String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DAY", day);
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_TEAM_PROCESS", teamProcess);
		map.put("P_USER_PROCESS", userProcess);
		map.put("P_ITEMS", itemN);
		map.put("P_TOTAL_TIME", totalTimeN);
		map.put("P_Status", type);
		map.put("P_COUNT", count);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getAllDipInDay", map);
	}*/

	@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpDip3Day> getAllDip3Day(String day, String bscid,
			String dip, String teamProcess) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DAY", day);
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_TEAM_PROCESS", teamProcess);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getAllDip3Day", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> baoCaoTongHop(String startDate, String endDate) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startDate);
		map.put("P_EDATE", endDate);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.baoCaoTongHop", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getTranstype() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getTranstype", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpDip> getAllDipInDay(String sday,String eday,String transType, String bscid, String dip,
			String teamProcess, String userProcess, int itemN, int itemEN,
			 String type, int count, int order,
			String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDAY", sday);
		map.put("P_EDAY", eday);
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_TEAM_PROCESS", teamProcess);
		map.put("P_USER_PROCESS", userProcess);
		map.put("P_ITEMS", itemN);
		map.put("P_ITEMS_E", itemEN);
		map.put("P_Status", type);
		map.put("P_COUNT", count);
		map.put("P_TRANS_TYPE", transType);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getAllDipInDay", map);
	
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<WarningDipSame> getAlarmSameSystem(String bscID, String device,
			String day) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_BSCID", bscID);
		map.put("P_DIP", device);
		map.put("P_DAY", day);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.getAlarmSameSystem", map);

	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossDipCC(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.titleLossDipCC", map);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossDip(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.titleLossDip", map);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossDipDetail() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.titleLossDipDetail", map);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossDip3Day() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.titleLossDip3Day", map);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossDipTotal() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_DIP.titleLossDipTotal", map);
	}
}