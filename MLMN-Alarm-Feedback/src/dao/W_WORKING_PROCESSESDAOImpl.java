package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.W_WORKING_PROCESSES;

public class W_WORKING_PROCESSESDAOImpl extends SqlMapClientDaoSupport implements W_WORKING_PROCESSESDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public W_WORKING_PROCESSESDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public int deleteByPrimaryKey(Integer id) {
        W_WORKING_PROCESSES key = new W_WORKING_PROCESSES();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("W_WORKING_PROCESSES.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public void insert(W_WORKING_PROCESSES record) {
        getSqlMapClientTemplate().insert("W_WORKING_PROCESSES.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public void insertSelective(W_WORKING_PROCESSES record) {
        getSqlMapClientTemplate().insert("W_WORKING_PROCESSES.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public W_WORKING_PROCESSES selectByPrimaryKey(Integer id) {
        W_WORKING_PROCESSES key = new W_WORKING_PROCESSES();
        key.setId(id);
        W_WORKING_PROCESSES record = (W_WORKING_PROCESSES) getSqlMapClientTemplate().queryForObject("W_WORKING_PROCESSES.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    public W_WORKING_PROCESSES selectIdWorksMaxCreateDate(String idWorks) {
        W_WORKING_PROCESSES record = (W_WORKING_PROCESSES) getSqlMapClientTemplate().queryForObject("W_WORKING_PROCESSES.baoCaoTienDo", idWorks);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public int updateByPrimaryKeySelective(W_WORKING_PROCESSES record) {
        int rows = getSqlMapClientTemplate().update("W_WORKING_PROCESSES.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_PROCESSES
     *
     * @ibatorgenerated Tue Jul 31 14:06:37 ICT 2012
     */
    public int updateByPrimaryKey(W_WORKING_PROCESSES record) {
        int rows = getSqlMapClientTemplate().update("W_WORKING_PROCESSES.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<W_WORKING_PROCESSES> filter(W_WORKING_PROCESSES filter) {

		return getSqlMapClientTemplate().queryForList("W_WORKING_PROCESSES.filter", filter);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<W_WORKING_PROCESSES> getWorkingProcessesListFilter(String title, String assess, Integer idWorkTypes, String column, String order){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("idWorkTypes", idWorkTypes);
		map.put("title", title);
		map.put("assess", assess);
		map.put("column", column);
		map.put("order", order);
		return getSqlMapClientTemplate().queryForList("W_WORKING_PROCESSES.getWorkingProcessesListFilter", map);
	}
	
	@Override
	public Integer countRow(W_WORKING_PROCESSES filter) {
		return (Integer) getSqlMapClientTemplate().queryForObject("W_WORKING_PROCESSES.countRow",
				filter);
	}
	
	@SuppressWarnings("unchecked")
	public List<W_WORKING_PROCESSES> getIdWorks(String idWorks) {
		return getSqlMapClientTemplate().queryForList("W_WORKING_PROCESSES.idWorkingProcesses",idWorks);
	}
	
	@Override
	@SuppressWarnings("unchecked")
	public List<W_WORKING_PROCESSES> getWorkingProcessesListByIdWorks(Integer idWorkTypes)
	{
		return getSqlMapClientTemplate().queryForList("W_WORKING_PROCESSES.getWorkingProcessesListByIdWorks", idWorkTypes);
	}
}