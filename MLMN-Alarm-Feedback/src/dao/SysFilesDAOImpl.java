package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.SysFiles;

public class SysFilesDAOImpl extends SqlMapClientDaoSupport implements SysFilesDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public SysFilesDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        SysFiles key = new SysFiles();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("SYS_FILES.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public void insert(SysFiles record) {
        getSqlMapClientTemplate().insert("SYS_FILES.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public void insertSelective(SysFiles record) {
        getSqlMapClientTemplate().insert("SYS_FILES.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public SysFiles selectByPrimaryKey(Integer id) {
        SysFiles key = new SysFiles();
        key.setId(id);
        SysFiles record = (SysFiles) getSqlMapClientTemplate().queryForObject("SYS_FILES.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public int updateByPrimaryKeySelective(SysFiles record) {
        int rows = getSqlMapClientTemplate().update("SYS_FILES.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_FILES
     *
     * @ibatorgenerated Wed Oct 09 11:59:41 PDT 2013
     */
    public int updateByPrimaryKey(SysFiles record) {
        int rows = getSqlMapClientTemplate().update("SYS_FILES.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @Override
    public int deleteSysFilesByMappingId(Integer id) {
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_MAPPING_ID", id);
    	
        getSqlMapClientTemplate().queryForObject("SYS_FILES.deleteSysFilesByMappingId", parms);
        return 1;
    }
    
    @Override
    public int insertSelectiveAndReturn(SysFiles record) {
        Integer id = (Integer) getSqlMapClientTemplate().insert("SYS_FILES.insertSelectiveAndReturn", record);
        return id;
    }
    
    @SuppressWarnings("unchecked")
	@Override
    public List<SysFiles> getSysFilesByMapping(String mappingId){
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_MAPPING_ID", mappingId);
		parms.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("SYS_FILES.getSysFilesByMapping", parms);
    }
}