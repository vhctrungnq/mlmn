package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.FbProcess;
import vo.FbProcessFilter;
import vo.FbReport;
import vo.FbType;
import vo.MDepartment;
import vo.SYS_PARAMETER;
import vo.VRFbProcessDay;
import vo.alarm_site.ReportFeedbackDay;

public class FbProcessDAOImpl extends SqlMapClientDaoSupport implements FbProcessDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public FbProcessDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public int deleteByPrimaryKey(Long id) {
        FbProcess key = new FbProcess();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("FB_PROCESS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public void insert(FbProcess record) {
        getSqlMapClientTemplate().insert("FB_PROCESS.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public void insertSelective(FbProcess record) {
        getSqlMapClientTemplate().insert("FB_PROCESS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public FbProcess selectByPrimaryKey(Long id) {
        FbProcess key = new FbProcess();
        key.setId(id);
        FbProcess record = (FbProcess) getSqlMapClientTemplate().queryForObject("FB_PROCESS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public int updateByPrimaryKeySelective(FbProcess record) {
        int rows = getSqlMapClientTemplate().update("FB_PROCESS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FB_PROCESS
     *
     * @ibatorgenerated Sat Nov 24 11:41:43 ICT 2012
     */
    public int updateByPrimaryKey(FbProcess record) {
        int rows = getSqlMapClientTemplate().update("FB_PROCESS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @Override
    public int updateFeedbackForTheoLo(FbProcess record) {
        int rows = getSqlMapClientTemplate().update("FB_PROCESS.updateFeedbackForTheoLo", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<FbProcess> getFbProcessFilter(String startDate, String endDate, String column, String order){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getFbProcessFilter", parms);
		return record;
	}
    
    @Override
    public int countRowDaXuLy(String startDate, String endDate){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("FB_PROCESS.countRowDaXuLy", parms);
    	Integer record = (Integer) parms.get("P_DATA");
    	return record;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<FbProcess> getQLThongTinPA(String maPA, String loaiPA, String loaiMang, String thoiGianPAFrom, String thoiGianPATo,
			String soTB, String loaiTB, String thoiGianXLFrom, String thoiGianXLTo, String deptProcess, String team, String trangThai, String tinhThanh, 
			String quanHuyen, String phuongXa, String vipCode, Integer fbIbc, String column, String order){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FB_CODE", maPA);
		parms.put("P_FB_TYPE", loaiPA);
		parms.put("P_NETWORK_TYPE", loaiMang);
		parms.put("P_FB_DATE_FROM", thoiGianPAFrom);
		parms.put("P_FB_DATE_TO", thoiGianPATo);
		parms.put("P_SUBSCRIBERS", soTB);
		parms.put("P_SUBSCRIBER_TYPE", loaiTB);
		parms.put("P_PROCESS_DATE_FROM", thoiGianXLFrom);
		parms.put("P_PROCESS_DATE_TO", thoiGianXLTo);
		parms.put("P_DEPT_PROCESS", deptProcess);
		parms.put("P_TEAM", team);
		parms.put("P_STATUS", trangThai);
		parms.put("P_PROVINCE", tinhThanh);
		parms.put("P_DISTRICT", quanHuyen);
		parms.put("P_WARDS", phuongXa);
		parms.put("P_VIP_CODE", vipCode);
		parms.put("P_FB_IBC", fbIbc);
		parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getQLThongTinPA", parms);
		return record;
	}
    @SuppressWarnings("unchecked")
    @Override
	public List<FbProcess> getGeneralFeedback(String maPA, String loaiPA, String loaiMang, String thoiGianPAFrom, String thoiGianPATo,
			String soTB, String loaiTB, String thoiGianXLFrom, String thoiGianXLTo, String deptProcess, String team, String trangThai, String tinhThanh, 
			String quanHuyen, String phuongXa, String vipCode, String fbIbc, String fbSendTelecom, 
			String site, String column, String order){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FB_CODE", maPA);
		parms.put("P_FB_TYPE", loaiPA);
		parms.put("P_NETWORK_TYPE", loaiMang);
		parms.put("P_FB_DATE_FROM", thoiGianPAFrom);
		parms.put("P_FB_DATE_TO", thoiGianPATo);
		parms.put("P_SUBSCRIBERS", soTB);
		parms.put("P_SUBSCRIBER_TYPE", loaiTB);
		parms.put("P_PROCESS_DATE_FROM", thoiGianXLFrom);
		parms.put("P_PROCESS_DATE_TO", thoiGianXLTo);
		parms.put("P_DEPT_PROCESS", deptProcess);
		parms.put("P_TEAM", team);
		parms.put("P_STATUS", trangThai);
		parms.put("P_PROVINCE", tinhThanh);
		parms.put("P_DISTRICT", quanHuyen);
		parms.put("P_WARDS", phuongXa);
		parms.put("P_VIP_CODE", vipCode);
		parms.put("P_FB_IBC", fbIbc);
		parms.put("P_FB_SEND_TELECOM", fbSendTelecom);
		parms.put("P_SITE", site);
		parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getGeneralFeedback", parms);
		return record;
	}
     
    @Override
    public FbProcess selectById(String id) {
        FbProcess record = (FbProcess) getSqlMapClientTemplate().queryForObject("FB_PROCESS.selectById", id);
        return record;
    }
    
    @Override
    public FbProcess selectJoinFBProById(String id) {
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_ID", id);
		parms.put("P_DATA", null);
    	
        FbProcess record = (FbProcess) getSqlMapClientTemplate().queryForObject("FB_PROCESS.selectJoinFBProById", parms);
        return record;
    }
    
    @SuppressWarnings("unchecked")
    @Override
    public List<FbProcess> selectFBTheoLo(String P_WHERE) {
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_WHERE", P_WHERE);
		parms.put("P_DATA", null);
    	
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.selectFBTheoLo", parms);
        return record;
    }
    
    @Override
    public int countSoLuongPA(String startDate, String endDate, String dieuKien){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_START_DATE", startDate);
    	parms.put("P_END_DATE", endDate);
    	parms.put("P_DIEU_KIEN", dieuKien);
		parms.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("FB_PROCESS.countSoLuongPA", parms);
    	Integer record = (Integer) parms.get("P_DATA");
    	return record;
    }
    
    @Override
    public String danhSoHieuLo(){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("FB_PROCESS.danhSoHieuLo", parms);
    	String record = (String) parms.get("P_DATA");
    	return record;
    }
    
    @SuppressWarnings("unchecked")
	@Override
    public List<SYS_PARAMETER> getQLTTFBList(){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getQLTTFBList", parms);
    }
    
    @SuppressWarnings("unchecked")
	@Override
    public List<SYS_PARAMETER> getTenLoaiTB(){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getTenLoaiTB", parms);
    }
    
    @SuppressWarnings("unchecked")
	@Override
    public List<SYS_PARAMETER> getTenLoaiMang(){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getTenLoaiMang", parms);
    }
    
    @Override
    public void insertFbProcess(String soThueBao, String phuongXa, String quanHuyen, String tinhThanh, String maLoaiPhanAnh, String loaiPhanAnh,
    		String noiDungPA, String thoiGianPA, String donViXL, String loaiMang, String idCentral){
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SUBSCRIBERS", soThueBao);
		parms.put("P_WARDS", phuongXa);
		parms.put("P_DISTRICT", quanHuyen);
		parms.put("P_PROVINCE", tinhThanh);
		parms.put("P_FB_CODE", maLoaiPhanAnh);
		parms.put("P_FB_TYPE", loaiPhanAnh);
		parms.put("P_FB_CONTENT", noiDungPA);
		parms.put("P_FB_DATE", thoiGianPA);
		parms.put("P_DEPT_PROCESS", donViXL);
		parms.put("P_NETWORK_TYPE", loaiMang);
		parms.put("P_ID", idCentral);
    	
    	getSqlMapClientTemplate().insert("FB_PROCESS.insertFbProcess", parms);
    }
    
    @SuppressWarnings("unchecked")
    @Override
    public List<FbProcess> getSlFbTheoLoaiPA(String startDate, String endDate, String fbType, String fbSendTelecom, String fbDistrict){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_SEND_TELECOM", fbSendTelecom);
    	parms.put("P_DISTRICT", fbDistrict);
    	parms.put("P_START_DATE", startDate);
    	parms.put("P_END_DATE", endDate);
    	parms.put("P_FB_TYPE", fbType);
		parms.put("P_DATA", null);
    	
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getSlFbTheoLoaiPA", parms);
    }
    
    @SuppressWarnings("unchecked")
    @Override
    public List<FbProcess> getSlFbTheoToVT(String startDate, String endDate, String deptProcess, String team, String fbSendTelecom, String fbDistrict){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_SEND_TELECOM", fbSendTelecom);
    	parms.put("P_DISTRICT", fbDistrict);
    	parms.put("P_START_DATE", startDate);
    	parms.put("P_END_DATE", endDate);
    	parms.put("P_DEPT_PROCESS", deptProcess);
    	parms.put("P_TEAM", team);
		parms.put("P_DATA", null);
    	
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getSlFbTheoToVT", parms);
    }
    
    @SuppressWarnings("unchecked")
    @Override
    public List<FbProcess> getSlFbTheoQuanHuyen(String startDate, String endDate, String province, String district, String fbSendTelecom){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_SEND_TELECOM", fbSendTelecom);
    	parms.put("P_START_DATE", startDate);
    	parms.put("P_END_DATE", endDate);
    	parms.put("P_PROVINCE", province);
    	parms.put("P_DISTRICT", district);
		parms.put("P_DATA", null);
    	
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getSlFbTheoQuanHuyen", parms);
    }
    
    @SuppressWarnings("unchecked")
    @Override
    public List<FbProcess> getSlFbTheoNguyenNhan(String startDate, String endDate, String fbSendTelecom, String fbDistrict){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_SEND_TELECOM", fbSendTelecom);
    	parms.put("P_DISTRICT", fbDistrict);
    	parms.put("P_START_DATE", startDate);
    	parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
    	
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getSlFbTheoNguyenNhan", parms);
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("FB_PROCESS.titleProcess", map);
	
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<FbProcessFilter> getProcessList(FbProcessFilter filter,
			String column, Integer order) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_FB_TYPE", filter.getFbType());
		map.put("P_NETWORK_TYPE", filter.getNetworkType());
		map.put("P_FB_CONTENT", filter.getFbContent());
		map.put("P_CAUSEDBY", filter.getCausedby());
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("FB_PROCESS.getFbProcessFilterList", map);

	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<FbType> getFBTypeList() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("FB_PROCESS.getFBTypeList", map);
	
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> networkTypeList() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("FB_PROCESS.networkTypeList", map);
	
	}

	@Override
	public void insertFbProcessFilter(FbProcessFilter record) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", record.getId());
		parms.put("P_FB_TYPE", record.getFbType());
		parms.put("P_NETWORK_TYPE", record.getNetworkType());
		parms.put("P_FB_CONTENT", record.getFbContent());
		parms.put("P_CAUSEDBY", record.getCausedby());
		parms.put("P_RESPONSE_CONTENT", record.getResponseContent());
		parms.put("P_CREATED_BY", record.getCreatedBy());
		parms.put("P_CREATE_DATE", record.getCreateDate());
		getSqlMapClientTemplate().insert("FB_PROCESS.insertFbProcessFilter", parms);
    }

	@Override
	public int deleteFbProcessFilter(Integer id) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", id);
		int rows = getSqlMapClientTemplate().delete("FB_PROCESS.deleteFbProcessFilter", parms);
        return rows;
	}

	@Override
	public int updateFbProcessFilter(FbProcessFilter record) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", record.getId());
		parms.put("P_FB_TYPE", record.getFbType());
		parms.put("P_NETWORK_TYPE", record.getNetworkType());
		parms.put("P_FB_CONTENT", record.getFbContent());
		parms.put("P_CAUSEDBY", record.getCausedby());
		parms.put("P_RESPONSE_CONTENT", record.getResponseContent());
		parms.put("P_MODIFIED_BY", record.getModifiedBy());
		parms.put("P_MODIFY_DATE", record.getModifyDate());
		int rows = getSqlMapClientTemplate().update("FB_PROCESS.updateFbProcessFilter", parms);
        return rows;
	}

	@Override
	public FbProcessFilter selectFbProcessFilterByID(int id) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_ID", id);
		parms.put("P_DATA", null);
		FbProcessFilter record = (FbProcessFilter) getSqlMapClientTemplate().queryForObject("FB_PROCESS.selectFbProcessFilterByID", parms);
        return record;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<MDepartment> getDepartmentFbList(){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
		List<MDepartment> record = (List<MDepartment>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getDepartmentFbList", parms);
		
		return record;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<MDepartment> getDepartmentByDistrict(String province, String district){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_PROVINCE", province);
		parms.put("P_DISTRICT", district);
		parms.put("P_DATA", null);
		List<MDepartment> record = (List<MDepartment>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getDepartmentByDistrict", parms);
		
		return record;
	}
	
	@Override
    public void updateCoreService(String status, String repeats, String hourData, String hourDefault){
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_STATUS", status);
		parms.put("P_REPEATS", repeats);
		parms.put("P_HOUR_DATA", hourData);
		parms.put("P_HOUR_DEFAULT", hourDefault);
    	getSqlMapClientTemplate().insert("FB_PROCESS.updateCoreService", parms);
    }
	
	@SuppressWarnings("unchecked")
	@Override
	public List<VRFbProcessDay> getVRFbProcessDay(String startDate, String endDate){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
		List<VRFbProcessDay> record = (List<VRFbProcessDay>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getVRFbProcessDay", parms);
		
		return record;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<ReportFeedbackDay> getReportByFbType(String startDate, String endDate, String fbSendTelecom, String fbDistrict){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SEND_TELECOM", fbSendTelecom);
		parms.put("P_DISTRICT", fbDistrict);
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
		List<ReportFeedbackDay> record = (List<ReportFeedbackDay>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportByFbType", parms);
		
		return record;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<ReportFeedbackDay> getReportByDepartment(String dept, String team, String startDate, String endDate, String fbSendTelecom, String fbDistrict){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SEND_TELECOM", fbSendTelecom);
		parms.put("P_DISTRICT", fbDistrict);
		parms.put("P_DEPT", dept);
		parms.put("P_TEAM", team);
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
		List<ReportFeedbackDay> record = (List<ReportFeedbackDay>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportByDepartment", parms);
		
		return record;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<ReportFeedbackDay> getReportByDistrict(String province, String district, String startDate, String endDate, String fbSendTelecom){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SEND_TELECOM", fbSendTelecom);
		parms.put("P_PROVINCE", province);
		parms.put("P_DISTRICT", district);
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
		List<ReportFeedbackDay> record = (List<ReportFeedbackDay>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportByDistrict", parms);
		
		return record;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<ReportFeedbackDay> getReportByCausedby(String startDate, String endDate, String fbSendTelecom, String fbDistrict){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SEND_TELECOM", fbSendTelecom);
		parms.put("P_DISTRICT", fbDistrict);
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_DATA", null);
		List<ReportFeedbackDay> record = (List<ReportFeedbackDay>) getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportByCausedby", parms);
		
		return record;
	}
	
	@SuppressWarnings("unchecked")
    @Override
    public List<FbProcess> getGridForFeedbackWeek(String startDate, String endDate, String fbType, String fbSendTelecom, String username){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_SEND_TELECOM", fbSendTelecom);
		parms.put("P_USER_NAME", username);
    	parms.put("P_START_DATE", startDate);
    	parms.put("P_END_DATE", endDate);
    	parms.put("P_FB_TYPE", fbType);
		parms.put("P_DATA", null);
    	
    	return getSqlMapClientTemplate().queryForList("FB_PROCESS.getGridForFeedbackWeek", parms);
    }
	
	@Override
    public int updateFeedbackDeleted(FbProcess record) {
        int rows = getSqlMapClientTemplate().update("FB_PROCESS.updateFeedbackDeleted", record);
        return rows;
    }
	
	@SuppressWarnings("unchecked")
    @Override
	public List<FbProcess> getFbDeletedList(String maPA, String loaiPA, String loaiMang, String thoiGianPAFrom, String thoiGianPATo,
			String soTB, String loaiTB, String thoiGianXLFrom, String thoiGianXLTo, String deptProcess, String team, String trangThai, String tinhThanh, 
			String quanHuyen, String phuongXa, String vipCode, Integer fbIbc, String column, String order){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FB_CODE", maPA);
		parms.put("P_FB_TYPE", loaiPA);
		parms.put("P_NETWORK_TYPE", loaiMang);
		parms.put("P_FB_DATE_FROM", thoiGianPAFrom);
		parms.put("P_FB_DATE_TO", thoiGianPATo);
		parms.put("P_SUBSCRIBERS", soTB);
		parms.put("P_SUBSCRIBER_TYPE", loaiTB);
		parms.put("P_PROCESS_DATE_FROM", thoiGianXLFrom);
		parms.put("P_PROCESS_DATE_TO", thoiGianXLTo);
		parms.put("P_DEPT_PROCESS", deptProcess);
		parms.put("P_TEAM", team);
		parms.put("P_STATUS", trangThai);
		parms.put("P_PROVINCE", tinhThanh);
		parms.put("P_DISTRICT", quanHuyen);
		parms.put("P_WARDS", phuongXa);
		parms.put("P_VIP_CODE", vipCode);
		parms.put("P_FB_IBC", fbIbc);
		parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getFbDeletedList", parms);
		return record;
	}

	/*Lay danh sach du lieu thoi gian xu ly, con lai cua FB de dem nguoc. AnhCTV 11/11/2015*/
	@SuppressWarnings("unchecked")
	@Override
	public List<FbProcess> getTimeCountdownFB(FbProcess filter,String thoiGianPAFrom,String thoiGianPATo,String thoiGianXLFrom,String thoiGianXLTo,String function) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FB_CODE", filter.getFbCode());
		parms.put("P_FB_TYPE", filter.getFbType());
		parms.put("P_NETWORK_TYPE", filter.getNetworkType());
		parms.put("P_FB_DATE_FROM", thoiGianPAFrom);
		parms.put("P_FB_DATE_TO", thoiGianPATo);
		parms.put("P_SUBSCRIBERS", filter.getSubscribers());
		parms.put("P_SUBSCRIBER_TYPE", filter.getSubscriberType());
		parms.put("P_PROCESS_DATE_FROM", thoiGianXLFrom);
		parms.put("P_PROCESS_DATE_TO", thoiGianXLTo);
		parms.put("P_DEPT_PROCESS", filter.getDeptProcess());
		parms.put("P_TEAM", filter.getTeam());
		parms.put("P_STATUS", filter.getStatus());
		parms.put("P_PROVINCE", filter.getProvince());
		parms.put("P_DISTRICT", filter.getDistrict());
		parms.put("P_WARDS", filter.getWards());
		parms.put("P_VIP_CODE", filter.getVipCode());
		parms.put("P_FB_IBC", filter.getFbIbc());
		parms.put("P_FB_SEND_TELECOM", filter.getFbSendTelecom());
		
		parms.put("P_DATA", null);
		
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getTimeCountdownFB", parms);
		return record;
	}
	/*Lay danh sach noi dung DVT phan hoi. AnhCTV 11/11/2015*/
	@SuppressWarnings("unchecked")
	@Override
	public List<String> getDvtFeedbackContentList() {
		
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
		
		List<String> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getDvtFeedbackContentList", parms);
		return record;
	}
	// chuyen FB. AnhCTV: 14/11/2015
	@Override
	public void removeFbProcess(FbProcess record) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", record.getId());
		parms.put("P_FB_TYPE", record.getFbType());
		parms.put("P_DEPT_PROCESS", record.getDeptProcess());
		parms.put("P_TEAM", record.getTeam());
		parms.put("P_NOTE", record.getNote());
		parms.put("P_MODIFIED_BY", record.getModifiedBy());
		parms.put("P_MODIFY_DATE", record.getModifyDate());
		getSqlMapClientTemplate().insert("FB_PROCESS.removeFbProcess", parms);
	}

	@Override
	public void checkDiemDen(String checkedList, String status,String username) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID_LIST", checkedList);
		parms.put("P_STATUS", status);
		parms.put("P_MODIFIED_BY", username);
		getSqlMapClientTemplate().insert("FB_PROCESS.checkDiemDen", parms);
	}
	
	// LAY DANH SACH FB DIEM DEN. . AnhCTV:14/06/2016
	@Override
	public List<FbProcess> getFeedbackDiemDen(String loaiPA,
			String thoiGianPAFrom, String thoiGianPATo, String thoiGianXLFrom,
			String thoiGianXLTo, String deptProcess, String team, String status) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FB_TYPE", loaiPA);
		parms.put("P_FB_DATE_FROM", thoiGianPAFrom);
		parms.put("P_FB_DATE_TO", thoiGianPATo);
		parms.put("P_PROCESS_DATE_FROM", thoiGianXLFrom);
		parms.put("P_PROCESS_DATE_TO", thoiGianXLTo);
		parms.put("P_DEPT_PROCESS", deptProcess);
		parms.put("P_TEAM", team);
		parms.put("P_STATUS", status);
		
		parms.put("P_DATA", null);
		
		@SuppressWarnings("unchecked")
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getFeedbackDiemDen", parms);
		return record;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleFBChart(String function) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", function);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("FB_PROCESS.titleFBChart", map);
	
	}

	// Lay du lieu do vao bieu do so luong FB. AnhCTV:04/07/2016
	@SuppressWarnings("unchecked")
	@Override
	public List<String> getDataFeedbackChart(String sdateChar,
			String edateChar, String region, String province, String district,
			String dept, String team, String fb_type, String username,
			String function) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdateChar);
		parms.put("P_EDATE", edateChar);
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_DISTRICT", district);
		parms.put("P_DEPT", dept);
		parms.put("P_TEAM", team);
		parms.put("P_FB_TYPE", fb_type);
		parms.put("P_USERNAME", username);
		parms.put("P_FUNCTION", function);
	
		parms.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("FB_PROCESS.getDataFeedbackChart", parms);
	}

	@Override
	public List<FbReport> getReportFBFBType(String sdate, String edate, Integer sweek, Integer smonth, Integer syear,
			String region, String province, String fbType, String status, String sqlWhere, String function,
			String reportType, String sqlReturn) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_SWEEK", sweek);
		parms.put("P_SMONTH", smonth);
		parms.put("P_SYEAR", syear);
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_FB_TYPE", fbType);
		parms.put("P_STATUS", status);
		parms.put("P_SQLWHERE", sqlWhere);
		parms.put("P_FUNCTION", function);
		parms.put("P_REPORT_TYPE",reportType);
		parms.put("P_SQL", sqlReturn);
		parms.put("P_DATA", null);
		
		@SuppressWarnings("unchecked")
		List<FbReport> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportFBFBType", parms);
		return record;
	}

	@Override
	public List<FbReport> getReportFBDVTProcess(String sdate, String edate, Integer sweek, Integer smonth, Integer syear,
			String region, String province, String fbType, String status, String sqlWhere, String function,
			String reportType, String sqlReturn) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_SWEEK", sweek);
		parms.put("P_SMONTH", smonth);
		parms.put("P_SYEAR", syear);
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_FB_TYPE", fbType);
		parms.put("P_STATUS", status);
		parms.put("P_SQLWHERE", sqlWhere);
		parms.put("P_FUNCTION", function);
		parms.put("P_REPORT_TYPE",reportType);
		parms.put("P_SQL", sqlReturn);
		parms.put("P_DATA", null);
		
		@SuppressWarnings("unchecked")
		List<FbReport> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportFBDVTProcess", parms);
		return record;
	}

	@Override
	public List<FbReport> getReportFBRequest(String sdate, String edate, Integer sweek, Integer smonth, Integer syear,
			String region, String province, String fbType, String status, String sqlWhere, String function,
			String reportType, String sqlReturn) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_SWEEK", sweek);
		parms.put("P_SMONTH", smonth);
		parms.put("P_SYEAR", syear);
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_FB_TYPE", fbType);
		parms.put("P_STATUS", status);
		parms.put("P_SQLWHERE", sqlWhere);
		parms.put("P_FUNCTION", function);
		parms.put("P_REPORT_TYPE",reportType);
		parms.put("P_SQL", sqlReturn);
		parms.put("P_DATA", null);
		
		@SuppressWarnings("unchecked")
		List<FbReport> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportFBRequest", parms);
		return record;
	}

	@Override
	public List<FbReport> getReportFBRise(String sdate, String edate, Integer sweek, Integer smonth, Integer syear,
			String region, String province, String fbType, String status, String sqlWhere, String function,
			String reportType, String sqlReturn) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_SWEEK", sweek);
		parms.put("P_SMONTH", smonth);
		parms.put("P_SYEAR", syear);
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_FB_TYPE", fbType);
		parms.put("P_STATUS", status);
		parms.put("P_SQLWHERE", sqlWhere);
		parms.put("P_FUNCTION", function);
		parms.put("P_REPORT_TYPE",reportType);
		parms.put("P_SQL", sqlReturn);
		parms.put("P_DATA", null);
		
		@SuppressWarnings("unchecked")
		List<FbReport> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportFBRise", parms);
		return record;
	}

	@Override
	public List<FbReport> getReportFBRegion(String sdate, String edate, String sweek, String smonth, String syear,
			String region, String province, String fbType, String status, String sqlWhere, String function,
			String reportType, String sqlReturn) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_SWEEK", sweek);
		parms.put("P_SMONTH", smonth);
		parms.put("P_SYEAR", syear);
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_FB_TYPE", fbType);
		parms.put("P_STATUS", status);
		parms.put("P_SQLWHERE", sqlWhere);
		parms.put("P_FUNCTION", function);
		parms.put("P_REPORT_TYPE",reportType);
		parms.put("P_SQL", sqlReturn);
		parms.put("P_DATA", null);
		
		@SuppressWarnings("unchecked")
		List<FbReport> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getReportFBRegion", parms);
		return record;
	}

	/*@Override
	public List<FbProcess> getFeedbackLuyKe(String sdate, String edate,
			String region, String province, String fbType, String status) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_SWEEK", null);
		parms.put("P_EWEEK", null);
		parms.put("P_SMONTH", null);
		parms.put("P_EMONTH", null);
		parms.put("P_SYEAR", null);
		parms.put("P_EYEAR", null);
		
		parms.put("P_REGION", region);
		parms.put("P_PROVINCE", province);
		parms.put("P_FB_TYPE", fbType);
		parms.put("P_STATUS", status);
		
		parms.put("P_SQLWHERE", null);
		parms.put("P_FUNCTION", "DY");
		parms.put("P_REPORT_TYPE", 1);
		
		parms.put("P_DATA", null);
		parms.put("P_SQL", null);
		
		@SuppressWarnings("unchecked")
		List<FbProcess> record = getSqlMapClientTemplate().queryForList("FB_PROCESS.getFeedbackLuyKe", parms);
		return record;
	}*/
}