package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.SYS_PARAMETER;
import vo.SysGroupUser;

public class SysGroupUserDAOImpl extends SqlMapClientDaoSupport implements SysGroupUserDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public SysGroupUserDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public int deleteByPrimaryKey(Integer id) {
        SysGroupUser key = new SysGroupUser();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("SYS_GROUP_USER.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public void insert(SysGroupUser record) {
        getSqlMapClientTemplate().insert("SYS_GROUP_USER.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public void insertSelective(SysGroupUser record) {
        getSqlMapClientTemplate().insert("SYS_GROUP_USER.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public SysGroupUser selectByPrimaryKey(Integer id) {
        SysGroupUser key = new SysGroupUser();
        key.setId(id);
        SysGroupUser record = (SysGroupUser) getSqlMapClientTemplate().queryForObject("SYS_GROUP_USER.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public int updateByPrimaryKeySelective(SysGroupUser record) {
        int rows = getSqlMapClientTemplate().update("SYS_GROUP_USER.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_GROUP_USER
     *
     * @ibatorgenerated Wed Oct 24 12:10:00 ICT 2012
     */
    public int updateByPrimaryKey(SysGroupUser record) {
        int rows = getSqlMapClientTemplate().update("SYS_GROUP_USER.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	public List<SysGroupUser> getSysGroupUserFilter(String system, String groupName, String column, String order) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SYSTEM", system);
		parms.put("P_GROUP_NAME", groupName);
		parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		List<SysGroupUser> record = getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.getSysGroupUserFilter", parms);
		return record;
	}
    
    @Override
    @SuppressWarnings("unchecked")
	public List<SysGroupUser> selectByGroupNameAndDeparmentName(String system, String groupName) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SYSTEM", system);
		parms.put("P_GROUP_NAME", groupName);
		parms.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.selectByGroupNameAndDeparmentName", parms);
	}
    
    @SuppressWarnings("unchecked")
	public List<SysGroupUser> selectGroupUsersBySystem(String system) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SYSTEM", system);
		parms.put("P_DATA", null);
		List<SysGroupUser> record = getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.selectGroupUsersBySystem", parms);
		return record;
	}
    
    @SuppressWarnings("unchecked")
    @Override
	public List<SysGroupUser> selectGroupUsersByDeptCode(String deptCode) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DEPT_CODE", deptCode);
		parms.put("P_DATA", null);
		List<SysGroupUser> record = getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.selectGroupUsersByDeptCode", parms);
		return record;
	}
    
    @SuppressWarnings("unchecked")
    @Override
	public List<SysGroupUser> selectSysGroupUsersList() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
		List<SysGroupUser> record = getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.selectSysGroupUsersList", parms);
		return record;
	}
    
    @Override
    public int countGroupName(String groupName){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_GROUP_NAME", groupName);
		parms.put("P_DATA", null);
		
		getSqlMapClientTemplate().queryForObject("SYS_GROUP_USER.countGroupName", parms);
		Integer record = (Integer) parms.get("P_DATA");
		
		return record;
	}
    
    @SuppressWarnings("unchecked")
	@Override
    public List<SYS_PARAMETER> titleSysGroupUser(){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.titleSysGroupUser", parms);
    }
    
    @SuppressWarnings("unchecked")
	@Override
    public List<SYS_PARAMETER> titleRolesGroupUsers(){
    	
    	Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.titleRolesGroupUsers", parms);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<SysGroupUser> getByUsernameSystem(String username, String system) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_USERNAME", username);
		parms.put("P_SYSTEM", system);
		parms.put("P_DATA", null);
		List<SysGroupUser> record = getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.getByUsernameSystem", parms);
		return record;
	}
    
    @SuppressWarnings("unchecked")
    @Override
	public List<SysGroupUser> getSguByUsername(String username) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_USERNAME", username);
		parms.put("P_DATA", null);
		List<SysGroupUser> record = getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.getSguByUsername", parms);
		return record;
	}
    
    @Override
    @SuppressWarnings("unchecked")
	public List<SysGroupUser> checkUniqueGroupUser(String system, String groupName, String id) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SYSTEM", system);
		parms.put("P_GROUP_NAME", groupName);
		parms.put("P_ID", id);
		parms.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("SYS_GROUP_USER.checkUniqueGroupUser", parms);
	}
}