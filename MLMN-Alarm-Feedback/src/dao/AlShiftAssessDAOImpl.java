package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlShiftAssess;
import vo.SYS_PARAMETER;


public class AlShiftAssessDAOImpl extends SqlMapClientDaoSupport implements AlShiftAssessDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public AlShiftAssessDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public int deleteByPrimaryKey(Integer id) {
        AlShiftAssess key = new AlShiftAssess();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_SHIFT_ASSESS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public void insert(AlShiftAssess record) {
        getSqlMapClientTemplate().insert("AL_SHIFT_ASSESS.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public void insertSelective(AlShiftAssess record) {
        getSqlMapClientTemplate().insert("AL_SHIFT_ASSESS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public AlShiftAssess selectByPrimaryKey(Integer id) {
        AlShiftAssess key = new AlShiftAssess();
        key.setId(id);
        AlShiftAssess record = (AlShiftAssess) getSqlMapClientTemplate().queryForObject("AL_SHIFT_ASSESS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public int updateByPrimaryKeySelective(AlShiftAssess record) {
        int rows = getSqlMapClientTemplate().update("AL_SHIFT_ASSESS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_ASSESS
     *
     * @ibatorgenerated Mon Aug 04 16:50:43 ICT 2014
     */
    public int updateByPrimaryKey(AlShiftAssess record) {
        int rows = getSqlMapClientTemplate().update("AL_SHIFT_ASSESS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String function, String type) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_FUNCTION", function);
		map.put("P_TYPE", type);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_SHIFT_ASSESS.titleForm", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<AlShiftAssess> getReportShiftAssess(String function,
			String sdate, String edate, String shift, String dept, String team,
			String groups, String users, String username, String startWeek,
			String endWeek, String startMonth, String endMonth,
			String startYear, String endYear,String network,String neType) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_FUNCTION", function);
		map.put("P_DATE_FROM", sdate);
		map.put("P_DATE_TO", edate);
		map.put("P_START_WEEK", startWeek);
		map.put("P_END_WEEK", endWeek);
		map.put("P_START_MONTH", startMonth);
		map.put("P_END_MONTH", endMonth);
		map.put("P_START_YEAR", startYear);
		map.put("P_END_YEAR", endYear);
		map.put("P_SHIFT", shift);
		map.put("P_DEPT", dept);
		map.put("P_TEAM", team);
		map.put("P_GROUPS", groups);
		map.put("P_USERS", users);
		map.put("P_USERNAME", username);
		map.put("P_NETWORK", network);
		map.put("P_NETYPE", neType);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_SHIFT_ASSESS.getReportShiftAssess", map);
	}

}