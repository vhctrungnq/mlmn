package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlMonitorTemperatureSite;

public class AlMonitorTemperatureSiteDAOImpl extends SqlMapClientDaoSupport implements AlMonitorTemperatureSiteDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public AlMonitorTemperatureSiteDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AlMonitorTemperatureSite key = new AlMonitorTemperatureSite();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_MONITOR_TEMPERATURE_SITE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public void insert(AlMonitorTemperatureSite record) {
        getSqlMapClientTemplate().insert("AL_MONITOR_TEMPERATURE_SITE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public void insertSelective(AlMonitorTemperatureSite record) {
        getSqlMapClientTemplate().insert("AL_MONITOR_TEMPERATURE_SITE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public AlMonitorTemperatureSite selectByPrimaryKey(Integer id) {
        AlMonitorTemperatureSite key = new AlMonitorTemperatureSite();
        key.setId(id);
        AlMonitorTemperatureSite record = (AlMonitorTemperatureSite) getSqlMapClientTemplate().queryForObject("AL_MONITOR_TEMPERATURE_SITE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public int updateByPrimaryKeySelective(AlMonitorTemperatureSite record) {
        int rows = getSqlMapClientTemplate().update("AL_MONITOR_TEMPERATURE_SITE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MONITOR_TEMPERATURE_SITE
     *
     * @ibatorgenerated Fri Nov 15 10:47:03 ICT 2013
     */
    public int updateByPrimaryKey(AlMonitorTemperatureSite record) {
        int rows = getSqlMapClientTemplate().update("AL_MONITOR_TEMPERATURE_SITE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    /* LAY DANH SACH THONG TIN GIAM SA NHIET DO SITE
     * @param P_SDATE: THOI GIAN BAT DAU
     *  @param P_EDATE: THOI GIAN KET THUC
     *  @param P_SITE: SITE
     * @param P_DATA:*/ 
	@SuppressWarnings("unchecked")
	@Override
	public List<AlMonitorTemperatureSite> getMonitorTemperatureSiteList(
			String sdate, String edate, String site) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SDATE", sdate);	
		parms.put("P_EDATE", edate);	
		parms.put("P_SITE", site);
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("AL_MONITOR_TEMPERATURE_SITE.getMonitorTemperatureSiteList", parms);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getSiteList() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("AL_MONITOR_TEMPERATURE_SITE.getSiteList", parms);
	}
	 /*Lay danh sach thong tin nhet do sate giam sat trong ca truc
	  * @shift: ca truc
	  * @typeform: form hien thi: L(list),F(filter)
	  * @ngayTK: Ngay tim kiem
	  * ngayTKTo: den ngay
	    */

	@SuppressWarnings("unchecked")
	@Override
	public List<AlMonitorTemperatureSite> getMonitorTemperatureSiteShift(
			String shiftid, String ngayTKTo, String ngayTK, String type,String region) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SHIFT", shiftid);	
		parms.put("P_EDATE", ngayTKTo);	
		parms.put("P_SDATE", ngayTK);
		parms.put("P_TYPE_FORM", type);
		parms.put("P_REGION", region);
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("AL_MONITOR_TEMPERATURE_SITE.getMonitorTemperatureSiteShift", parms);
	
	}
	
}