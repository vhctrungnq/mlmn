package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlManageCrCdd;

public class AlManageCrCddDAOImpl extends SqlMapClientDaoSupport implements AlManageCrCddDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public AlManageCrCddDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AlManageCrCdd key = new AlManageCrCdd();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_MANAGE_CR_CDD.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public void insert(AlManageCrCdd record) {
        getSqlMapClientTemplate().insert("AL_MANAGE_CR_CDD.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public void insertSelective(AlManageCrCdd record) {
        getSqlMapClientTemplate().insert("AL_MANAGE_CR_CDD.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public AlManageCrCdd selectByPrimaryKey(Integer id) {
        AlManageCrCdd key = new AlManageCrCdd();
        key.setId(id);
        AlManageCrCdd record = (AlManageCrCdd) getSqlMapClientTemplate().queryForObject("AL_MANAGE_CR_CDD.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public int updateByPrimaryKeySelective(AlManageCrCdd record) {
        int rows = getSqlMapClientTemplate().update("AL_MANAGE_CR_CDD.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_CR_CDD
     *
     * @ibatorgenerated Wed Nov 20 12:08:43 ICT 2013
     */
    public int updateByPrimaryKey(AlManageCrCdd record) {
        int rows = getSqlMapClientTemplate().update("AL_MANAGE_CR_CDD.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    public int updateFileInfo(AlManageCrCdd record) {
        int rows = getSqlMapClientTemplate().update("AL_MANAGE_CR_CDD.ibatorgenerated_updateFileInfo", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageCrCdd> getAlManageCrCddFilter(String crName, String vendor, String projectCode, String crCdd,
			String bscid, String site,
			Integer startRecord, Integer endRecord, String sortfield, String sortorder, String strWhere,String maPhong) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_CR_NAME", crName);
    	map.put("P_VENDOR", vendor);
    	map.put("P_PROJECT_CODE", projectCode);
    	map.put("P_CR_CDD", crCdd);
    	map.put("P_BSCID", bscid);
    	map.put("P_SITE", site);
    	map.put("P_START_RECORD", startRecord);
    	map.put("P_END_RECORD", endRecord);
    	map.put("P_SOFT_FIELD", sortfield);
    	map.put("P_SOFT_ORDER", sortorder);
    	map.put("P_STR_WHERE", strWhere);
    	map.put("P_MA_PHONG", maPhong);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_CR_CDD.getAlManageCrCddFilter", map);
    }
    
    @Override
    public int countAlManageCrCddFilter(String crName, String vendor, String projectCode, String crCdd, 
    		String bscid, String site, String strWhere,String maPhong){
    	
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_CR_NAME", crName);
    	map.put("P_VENDOR", vendor);
    	map.put("P_PROJECT_CODE", projectCode);
    	map.put("P_CR_CDD", crCdd);
    	map.put("P_BSCID", bscid);
    	map.put("P_SITE", site);
    	map.put("P_STR_WHERE", strWhere);
    	map.put("P_MA_PHONG", maPhong);
		
    	map.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("AL_MANAGE_CR_CDD.countAlManageCrCddFilter", map);
    	Integer record = (Integer) map.get("P_DATA");
    	return record;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageCrCdd> checkCrNameUk(String crName, String crCdd, String id) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_CR_NAME", crName);
    	map.put("P_CR_CDD", crCdd);
    	map.put("P_ID", id);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_CR_CDD.checkCrNameUk", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageCrCdd> loadCddBySiteidAndNe(String siteid, String ne) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_SITEID", siteid);
    	map.put("P_NE", ne);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_CR_CDD.loadCddBySiteidAndNe", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageCrCdd> getProjectCodeYearList(String type) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_TYPE", type);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_CR_CDD.getProjectCodeYearList", map);
    }
}