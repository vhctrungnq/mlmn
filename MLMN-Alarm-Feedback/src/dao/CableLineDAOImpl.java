package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.CableLine;

public class CableLineDAOImpl extends SqlMapClientDaoSupport implements CableLineDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public CableLineDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public int deleteByPrimaryKey(String cableLineId) {
        CableLine key = new CableLine();
        key.setCableLineId(cableLineId);
        int rows = getSqlMapClientTemplate().delete("CABLE_LINE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public void insert(CableLine record) {
        getSqlMapClientTemplate().insert("CABLE_LINE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public void insertSelective(CableLine record) {
        getSqlMapClientTemplate().insert("CABLE_LINE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public CableLine selectByPrimaryKey(String cableLineId) {
        CableLine key = new CableLine();
        key.setCableLineId(cableLineId);
        CableLine record = (CableLine) getSqlMapClientTemplate().queryForObject("CABLE_LINE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public int updateByPrimaryKeySelective(CableLine record) {
        int rows = getSqlMapClientTemplate().update("CABLE_LINE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE
     *
     * @ibatorgenerated Wed Dec 12 17:07:39 ICT 2012
     */
    public int updateByPrimaryKey(CableLine record) {
        int rows = getSqlMapClientTemplate().update("CABLE_LINE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@Override
	public List<CableLine> getCableLineFilter(CableLine cable, String thuocTinh, int order, String column) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("sBsc", cable.getsBsc());
    	parms.put("tranmission", cable.getTransmission1());
    	parms.put("location", cable.getLocation1());
    	parms.put("thuocTinh", thuocTinh);
    	parms.put("order", order);
    	parms.put("column", column);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableLine> record = getSqlMapClientTemplate().queryForList("CABLE_LINE.getCableLineFilter", parms);
        return record;
	}

	@Override
	public CableLine getCableById(Integer id) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("id", id);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableLine> record = getSqlMapClientTemplate().queryForList("CABLE_LINE.getCableById", parms);
		
		if (record != null && record.size() > 0)
			return record.get(0);
		return null;
	}

	@Override
	public CableLine getCableLineByCablelineId(String cableLineId) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("cableLineId", cableLineId);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableLine> record = getSqlMapClientTemplate().queryForList("CABLE_LINE.getCableLineByCablelineId", parms);
		
		if (record != null && record.size() > 0)
			return record.get(0);
		return null;
	}

	@Override
	public List<CableLine> getCableLineAll() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableLine> record = getSqlMapClientTemplate().queryForList("CABLE_LINE.getCableLineAll", parms);
        return record;
	}
}