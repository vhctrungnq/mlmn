package vn.com.vhc.vmsc2.statistics.dao;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vn.com.vhc.vmsc2.statistics.domain.Route;
import vn.com.vhc.vmsc2.statistics.web.filter.RouteFilter;

public class RouteDAOImpl extends SqlMapClientDaoSupport implements RouteDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public RouteDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public int deleteByPrimaryKey(String fromMscid, String routeid, String toMscid) {
        Route key = new Route();
        key.setFromMscid(fromMscid);
        key.setRouteid(routeid);
        key.setToMscid(toMscid);
        int rows = getSqlMapClientTemplate().delete("H_ROUTE_CORE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public void insert(Route record) {
        getSqlMapClientTemplate().insert("H_ROUTE_CORE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public void insertSelective(Route record) {
        getSqlMapClientTemplate().insert("H_ROUTE_CORE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public Route selectByPrimaryKey(String fromMscid, String routeid, String toMscid) {
        Route key = new Route();
        key.setFromMscid(fromMscid);
        key.setRouteid(routeid);
        key.setToMscid(toMscid);
        Route record = (Route) getSqlMapClientTemplate().queryForObject("H_ROUTE_CORE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public int updateByPrimaryKeySelective(Route record) {
        int rows = getSqlMapClientTemplate().update("H_ROUTE_CORE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_ROUTE_CORE
     *
     * @ibatorgenerated Thu Oct 21 11:50:23 ICT 2010
     */
    public int updateByPrimaryKey(Route record) {
        int rows = getSqlMapClientTemplate().update("H_ROUTE_CORE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@SuppressWarnings("unchecked")
	public List<Route> filter(RouteFilter filter) {
		return getSqlMapClientTemplate().queryForList("H_ROUTE_CORE.filter", filter);
	}
	@SuppressWarnings("unchecked")
	public List<Route> getRouteName() {
		return getSqlMapClientTemplate().queryForList("H_ROUTE_CORE.getRouteName");
	}
	@SuppressWarnings("unchecked")
	public List<Route> getSPCName() {
		return getSqlMapClientTemplate().queryForList("H_ROUTE_CORE.getSPCName");
	}
}