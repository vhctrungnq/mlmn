package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.CableDropEt4tl;
import vo.SYS_PARAMETER;
import vo.alarm.utils.CableDropEt4tlFilter;

public class CableDropEt4tlDAOImpl extends SqlMapClientDaoSupport implements CableDropEt4tlDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_DROP_ET4_TL
     *
     * @ibatorgenerated Fri Apr 05 10:12:05 ICT 2013
     */
    public CableDropEt4tlDAOImpl() {
        super();
    } 
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_DROP_ET4_TL
     *
     * @ibatorgenerated Fri Apr 05 10:12:05 ICT 2013
     */
    public void insert(CableDropEt4tl record) {
        getSqlMapClientTemplate().insert("CABLE_DROP_ET4_TL.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_DROP_ET4_TL
     *
     * @ibatorgenerated Fri Apr 05 10:12:05 ICT 2013
     */
    public void insertSelective(CableDropEt4tl record) {
        getSqlMapClientTemplate().insert("CABLE_DROP_ET4_TL.ibatorgenerated_insertSelective", record);
    }
    
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_DROP_ET4_TL
     *
     * @ibatorgenerated Fri Apr 05 10:12:05 ICT 2013
     */
    public int updateByPrimaryKey(CableDropEt4tl record) {
        int rows = getSqlMapClientTemplate().update("CABLE_DROP_ET4_TL.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    public CableDropEt4tl selectById(Integer id){
    	CableDropEt4tl key = new CableDropEt4tl();
        key.setId(id);
        CableDropEt4tl record = (CableDropEt4tl) getSqlMapClientTemplate().queryForObject("CABLE_DROP_ET4_TL.ibatorgenerated_selectById", key);
        return record;
    }
    
    public int deleteByPrimaryKey(Integer id) {
    	CableDropEt4tl key = new CableDropEt4tl();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("CABLE_DROP_ET4_TL.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
    
    public CableDropEt4tl selectByPrimaryKey(String area, String directionCon, String dipL2Name, String dipL10Name){
    	CableDropEt4tl key = new CableDropEt4tl();
        key.setArea(area);
        key.setDirectionCon(directionCon);
        key.setDipL2Name(dipL2Name);
        key.setDipL10Name(dipL10Name);
        CableDropEt4tl record = (CableDropEt4tl) getSqlMapClientTemplate().queryForObject("CABLE_DROP_ET4_TL.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<CableDropEt4tl> getList(CableDropEt4tlFilter filter,String column, int order, Integer delData){
		Map<String, Object> map = new HashMap<String, Object>(); 
		map.put("p_AREA",filter.getArea());
		map.put("p_DIRECTIONCON",filter.getDirectionCon());
		map.put("p_INFO", filter.getInfo());
		
		map.put("p_COLUMN", column);
		map.put("p_ORDER", order);
		map.put("p_DELDATA", delData);
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("CABLE_DROP_ET4_TL.getList", map);

	}
    
    @SuppressWarnings("unchecked")
   	@Override
   	public List<SYS_PARAMETER> titleForm(String type_form){
   		Map<String, Object> map = new HashMap<String, Object>(); 
   		map.put("p_TYPE_FORM",type_form); 
   		 
   		map.put("p_DATA", null);
   		return getSqlMapClientTemplate().queryForList("CABLE_DROP_ET4_TL.titleForm", map);

   	}
   	
   	@SuppressWarnings("unchecked")
	public List<String> getAllAreas(String term) {
		return getSqlMapClientTemplate().queryForList("CABLE_DROP_ET4_TL.getAllAreas", term);
	}
   	
   	@SuppressWarnings("unchecked")
	public List<String> getAllDirections(String term) {
		return getSqlMapClientTemplate().queryForList("CABLE_DROP_ET4_TL.getAllDirection", term);
	}
}