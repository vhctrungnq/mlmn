package vn.com.vhc.vmsc2.statistics.dao;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vn.com.vhc.vmsc2.statistics.domain.KpiMapping;
import vn.com.vhc.vmsc2.statistics.web.filter.KpiMappingFilter;

public class KpiMappingDAOImpl extends SqlMapClientDaoSupport implements KpiMappingDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public KpiMappingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public int deleteByPrimaryKey(Integer configId) {
        KpiMapping key = new KpiMapping();
        key.setConfigId(configId);
        int rows = getSqlMapClientTemplate().delete("KPI_MAPPING.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public void insert(KpiMapping record) {
        getSqlMapClientTemplate().insert("KPI_MAPPING.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public void insertSelective(KpiMapping record) {
        getSqlMapClientTemplate().insert("KPI_MAPPING.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public KpiMapping selectByPrimaryKey(Integer configId) {
        KpiMapping key = new KpiMapping();
        key.setConfigId(configId);
        KpiMapping record = (KpiMapping) getSqlMapClientTemplate().queryForObject("KPI_MAPPING.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public int updateByPrimaryKeySelective(KpiMapping record) {
        int rows = getSqlMapClientTemplate().update("KPI_MAPPING.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table KPI_MAPPING
     *
     * @ibatorgenerated Mon Jan 28 12:08:48 ICT 2013
     */
    public int updateByPrimaryKey(KpiMapping record) {
        int rows = getSqlMapClientTemplate().update("KPI_MAPPING.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
   	public List<KpiMapping> getAll() {
   		return getSqlMapClientTemplate().queryForList("KPI_MAPPING.getAll");
   	}
    
    @SuppressWarnings("unchecked")
	public List<KpiMapping> filter(KpiMappingFilter filter) {
		return getSqlMapClientTemplate().queryForList("KPI_MAPPING.filter", filter);
	}
    
    public KpiMapping filterBykey(KpiMappingFilter filter) {
        return (KpiMapping) getSqlMapClientTemplate().queryForObject("KPI_MAPPING.filter", filter);
	}
    
    public KpiMapping exitKpiMapping(String reportName) 
	{
    	KpiMapping key = new KpiMapping();
		key.setReportName(reportName);
		KpiMapping record = (KpiMapping) getSqlMapClientTemplate().queryForObject("KPI_MAPPING.exitKpiMapping", key);
		
			return record;
	}
}