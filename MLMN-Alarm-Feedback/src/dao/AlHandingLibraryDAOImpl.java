package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlHandingLibrary;
import vo.SYS_PARAMETER;

public class AlHandingLibraryDAOImpl extends SqlMapClientDaoSupport implements AlHandingLibraryDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public AlHandingLibraryDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AlHandingLibrary key = new AlHandingLibrary();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_HANDLING_LIBRARY.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public void insert(AlHandingLibrary record) {
        getSqlMapClientTemplate().insert("AL_HANDLING_LIBRARY.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public void insertSelective(AlHandingLibrary record) {
        getSqlMapClientTemplate().insert("AL_HANDLING_LIBRARY.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public AlHandingLibrary selectByPrimaryKey(Integer id) {
        AlHandingLibrary key = new AlHandingLibrary();
        key.setId(id);
        AlHandingLibrary record = (AlHandingLibrary) getSqlMapClientTemplate().queryForObject("AL_HANDLING_LIBRARY.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public int updateByPrimaryKeySelective(AlHandingLibrary record) {
        int rows = getSqlMapClientTemplate().update("AL_HANDLING_LIBRARY.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_HANDLING_LIBRARY
     *
     * @ibatorgenerated Wed Sep 18 14:14:48 ICT 2013
     */
    public int updateByPrimaryKey(AlHandingLibrary record) {
        int rows = getSqlMapClientTemplate().update("AL_HANDLING_LIBRARY.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeForm) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FORM", typeForm);	
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("AL_HANDLING_LIBRARY.titleForm", parms);
	}
	 @SuppressWarnings("unchecked")
	@Override
	public List<AlHandingLibrary> getHandingListAll(String vendor,
			String alarmType, String alarmName, String alarmMappingName) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ALARM_TYPE", alarmType);	
		parms.put("P_VENDOR", vendor);	
		parms.put("P_ALARM_NAME", alarmName);	
		parms.put("P_ALARM_MAPPING_NAME", alarmMappingName);	
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("AL_HANDLING_LIBRARY.getHandingListAll", parms);
	}
}