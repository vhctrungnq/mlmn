package dao;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
 
import vo.AlShiftFes; 
import vo.SYS_PARAMETER;
import vo.alarm.utils.AlShiftFesFilter;

public class AlShiftFesDAOImpl extends SqlMapClientDaoSupport implements AlShiftFesDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public AlShiftFesDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public int deleteByPrimaryKey(Integer shiftId) {
        AlShiftFes key = new AlShiftFes();
        key.setShiftId(shiftId);
        int rows = getSqlMapClientTemplate().delete("AL_SHIFT_FES.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public void insert(AlShiftFes record) {
        getSqlMapClientTemplate().insert("AL_SHIFT_FES.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public void insertSelective(AlShiftFes record) {
        getSqlMapClientTemplate().insert("AL_SHIFT_FES.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public AlShiftFes selectByPrimaryKey(Integer shiftId) {
        AlShiftFes key = new AlShiftFes();
        key.setShiftId(shiftId);
        AlShiftFes record = (AlShiftFes) getSqlMapClientTemplate().queryForObject("AL_SHIFT_FES.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    public AlShiftFes selectByColumn(Date stime,Date etime, String leaderName, String staffName, String leaderPhone, String staffPhone){
        AlShiftFes key = new AlShiftFes();
        key.setStime(stime);
        key.setEtime(etime);
        key.setLeaderName(leaderName);
        key.setStaffName(staffName);
        key.setLeaderPhone(leaderPhone);
        key.setStaffPhone(staffPhone);
        AlShiftFes record = (AlShiftFes) getSqlMapClientTemplate().queryForObject("AL_SHIFT_FES.ibatorgenerated_selectByColumn", key);
        return record;
    }


    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public int updateByPrimaryKeySelective(AlShiftFes record) {
        int rows = getSqlMapClientTemplate().update("AL_SHIFT_FES.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_SHIFT_FES
     *
     * @ibatorgenerated Fri Apr 05 11:58:58 ICT 2013
     */
    public int updateByPrimaryKey(AlShiftFes record) {
        int rows = getSqlMapClientTemplate().update("AL_SHIFT_FES.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    @SuppressWarnings("unchecked")
	@Override
	public List<String> getLeaderList(String leaderName) {
		return getSqlMapClientTemplate().queryForList("AL_SHIFT_FES.getLeaderList", leaderName);
	}
    @Override
	public  AlShiftFes getShiftFesByShift(AlShiftFes alShiftFes) {
    	AlShiftFes record = (AlShiftFes) getSqlMapClientTemplate().queryForObject("AL_SHIFT_FES.getShiftFesByShift", alShiftFes);
        return record;
	}
    
    @SuppressWarnings("unchecked")
    public List<AlShiftFes> selectByColumn(String stime,String etime, String leaderName, String staffName, String leaderPhone, String staffPhone){
    	Map<String, String> map = new HashMap<String, String>();
    	map.put("stime", stime);
    	map.put("etime", etime);
    	map.put("leaderName", leaderName);
    	map.put("staffName", staffName);
    	map.put("leaderPhone", leaderPhone);
    	map.put("staffPhone", staffPhone);
    return getSqlMapClientTemplate().queryForList("AL_SHIFT_FES.selectByColumn", map);
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<AlShiftFes> getAlShiftFes(AlShiftFesFilter filter, int order, String column){
		Map<String, Object> map = new HashMap<String, Object>();
		
		map.put("p_stime", filter.getsTime());
		map.put("p_etime", filter.geteTime());
		map.put("p_dept", filter.getDept());
		map.put("p_leaderName", filter.getLeaderName());
		map.put("p_leaderPhone", filter.getLeaderPhone());
		map.put("p_regency", filter.getRegency());
		map.put("p_decription", filter.getDecription());
		
		map.put("p_column", column);
		map.put("p_order", order);
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_SHIFT_FES.getList", map); 
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeForm){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("TYPE_FORM", typeForm); 
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_SHIFT_FES.titleForm", map);
	}
}