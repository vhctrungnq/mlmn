package dao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.AlAlarmExtend;
import vo.VAlAlarmLog;

public class VAlAlarmLogDAOImpl extends SqlMapClientDaoSupport implements VAlAlarmLogDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_ALARM_LOG
     *
     * @ibatorgenerated Tue Dec 11 16:52:29 ICT 2012
     */
    public VAlAlarmLogDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_ALARM_LOG
     *
     * @ibatorgenerated Tue Dec 11 16:52:29 ICT 2012
     */
    public void insert(VAlAlarmLog record) {
        getSqlMapClientTemplate().insert("V_AL_ALARM_LOG.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_ALARM_LOG
     *
     * @ibatorgenerated Tue Dec 11 16:52:29 ICT 2012
     */
    public void insertSelective(VAlAlarmLog record) {
        getSqlMapClientTemplate().insert("V_AL_ALARM_LOG.ibatorgenerated_insertSelective", record);
    }

	@SuppressWarnings("unchecked")
	@Override
	public List<VAlAlarmLog> getCB2GListAtShift(Integer shiftid,int startRecord6, int endRecord6,
			String column, String order) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SHIFT_ID", shiftid);
		map.put("P_StartRecord", startRecord6);
		map.put("P_EndRecord", endRecord6);
		map.put("P_column", column);
		map.put("P_order", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_ALARM_LOG.getCB2GListAtShift", map);
	}

	@Override
	public int delete(String alarmName, String system, String alarmType,
			String sdate, String edate) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ALARM_NAME", alarmName);
		parms.put("P_SYSTEM", system);
		parms.put("P_ALARM_TYPE", alarmType);
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
        int rows = getSqlMapClientTemplate().update("V_AL_ALARM_LOG.delete", parms);
        return rows;
	}

	@Override
	public VAlAlarmLog selectByMore(String system, String alarmName,
			String alarmType, String sdate, String edate) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SYSTEM", system);
		parms.put("P_ALARM_NAME", alarmName);
		parms.put("P_ALARM_TYPE", alarmType);
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_DATA", null);
		VAlAlarmLog record = (VAlAlarmLog) getSqlMapClientTemplate().queryForObject("V_AL_ALARM_LOG.selectByMore", parms);
	    return record;
	}
	@Override
	public VAlAlarmLog selectByID(String id) {
		VAlAlarmLog key = new VAlAlarmLog();
	        key.setId(Integer.parseInt(id));
	        VAlAlarmLog record = (VAlAlarmLog) getSqlMapClientTemplate().queryForObject("V_AL_ALARM_LOG.selectByID", key);
	        return record;
	}

	@Override
	public int update(VAlAlarmLog vAlAlarmLog) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", vAlAlarmLog.getId());
		map.put("P_SDATE", vAlAlarmLog.getStime());
		map.put("P_EDATE", vAlAlarmLog.getEtime());
		map.put("P_BSCID", vAlAlarmLog.getBscid());
		map.put("P_SYSTEM", vAlAlarmLog.getSystem());
		map.put("P_ALARM_NAME", vAlAlarmLog.getAlarmName());
		map.put("P_ALARM_TYPE", vAlAlarmLog.getAlarmType());
		map.put("P_CAUSEBY", vAlAlarmLog.getCauseby());
		map.put("P_ACTION_PROCESS", vAlAlarmLog.getActionProcess());
		map.put("P_DVT_TEAM_PROCESS", vAlAlarmLog.getDvtTeamProcess());
		map.put("P_DVT_USER_PROCESS", vAlAlarmLog.getDvtUserProcess());
		map.put("P_SHIFT_ID", vAlAlarmLog.getShiftId());
		
        int rows = getSqlMapClientTemplate().update("V_AL_ALARM_LOG.update", map);
        return rows;
	}

	@Override
	public int countCB2GList(Integer shiftid) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_SHIFT_ID", shiftid);
		parms.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("V_AL_ALARM_LOG.countCB2GList", parms);
    	Integer record = (Integer) parms.get("P_DATA");
    	return record;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<VAlAlarmLog> getAlarmSameSystem(String operator, String system,
			String sdate, String edate) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_OPERATOR", operator);
		parms.put("P_SYSTEM", system);
		parms.put("P_SDATE", sdate);
		parms.put("P_EDATE", edate);
		parms.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_ALARM_LOG.getAlarmSameSystem", parms);
	}
	@SuppressWarnings("unchecked")
	/*@Override
	public List<VAlAlarmLog> getALL2G(String day) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DAY", day);
		parms.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_ALARM_LOG.getALL2G", parms);
	}*/

	@Override
	public List<VAlAlarmLog> getALL2G(String day, String alarmType,
			String statusKT, String bscidTK, String cellidTK) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DAY", day);
		parms.put("P_ALARM_TYPE", alarmType);
		parms.put("P_STATUS", statusKT);
		parms.put("P_BSCID", bscidTK);
		parms.put("P_CELLID", cellidTK);
		parms.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_ALARM_LOG.getALL2G", parms);
	
	}

	@Override
	public int updateShiftID(String id, String shiftId) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", id);
		parms.put("P_SHIFT_ID", shiftId);
        int rows = getSqlMapClientTemplate().update("V_AL_ALARM_LOG.updateShiftID", parms);
        return rows;
	}

	
}