package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.HProvincesCode;

public class HProvincesCodeDAOImpl extends SqlMapClientDaoSupport implements HProvincesCodeDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public HProvincesCodeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public int deleteByPrimaryKey(String code, String region) {
        HProvincesCode key = new HProvincesCode();
        key.setCode(code);
        key.setRegion(region);
        int rows = getSqlMapClientTemplate().delete("H_PROVINCES_CODE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public void insert(HProvincesCode record) {
        getSqlMapClientTemplate().insert("H_PROVINCES_CODE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public void insertSelective(HProvincesCode record) {
        getSqlMapClientTemplate().insert("H_PROVINCES_CODE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public HProvincesCode selectByPrimaryKey(String code, String region) {
        HProvincesCode key = new HProvincesCode();
        key.setCode(code);
        key.setRegion(region);
        HProvincesCode record = (HProvincesCode) getSqlMapClientTemplate().queryForObject("H_PROVINCES_CODE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public int updateByPrimaryKeySelective(HProvincesCode record) {
        int rows = getSqlMapClientTemplate().update("H_PROVINCES_CODE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Mon Sep 23 09:35:45 ICT 2013
     */
    public int updateByPrimaryKey(HProvincesCode record) {
        int rows = getSqlMapClientTemplate().update("H_PROVINCES_CODE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getHProvinceCodeByEquiment() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getHProvinceCodeByEquiment", map);
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getHProvincesCodeList(String province) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_PROVINCE", province);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getHProvincesCodeList", map);
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getProvincesCodeToRoles(String username, String province, String district, String code, String region) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_USERNAME", username);
		map.put("S_PROVINCE", province);
		map.put("S_DISTRICT", district);
		map.put("S_CODE", code);
		map.put("P_REGION", region);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getProvincesCodeToRoles", map);
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getDeptList() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getDeptList", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getAllRegion() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllRegion");
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getAllProvinceByRegion(String region) {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllProvinceByRegion");
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getAllProvince() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllProvince");
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<HProvincesCode> getDistrictByProvince(String region, String province) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_REGION", region);
		map.put("P_PROVINCE", province);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getDistrictByProvince", map);
	}
}