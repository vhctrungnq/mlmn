package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.W_WORKING_FEEDBACKS;

public class W_WORKING_FEEDBACKSDAOImpl extends SqlMapClientDaoSupport implements W_WORKING_FEEDBACKSDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public W_WORKING_FEEDBACKSDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public int deleteByPrimaryKey(Integer id) {
        W_WORKING_FEEDBACKS key = new W_WORKING_FEEDBACKS();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("W_WORKING_FEEDBACKS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public void insert(W_WORKING_FEEDBACKS record) {
        getSqlMapClientTemplate().insert("W_WORKING_FEEDBACKS.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public void insertSelective(W_WORKING_FEEDBACKS record) {
        getSqlMapClientTemplate().insert("W_WORKING_FEEDBACKS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public W_WORKING_FEEDBACKS selectByPrimaryKey(Integer id) {
        W_WORKING_FEEDBACKS key = new W_WORKING_FEEDBACKS();
        key.setId(id);
        W_WORKING_FEEDBACKS record = (W_WORKING_FEEDBACKS) getSqlMapClientTemplate().queryForObject("W_WORKING_FEEDBACKS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public int updateByPrimaryKeySelective(W_WORKING_FEEDBACKS record) {
        int rows = getSqlMapClientTemplate().update("W_WORKING_FEEDBACKS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_FEEDBACKS
     *
     * @ibatorgenerated Thu Aug 09 09:26:33 ICT 2012
     */
    public int updateByPrimaryKey(W_WORKING_FEEDBACKS record) {
        int rows = getSqlMapClientTemplate().update("W_WORKING_FEEDBACKS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<W_WORKING_FEEDBACKS> filter(W_WORKING_FEEDBACKS filter) {

		return getSqlMapClientTemplate().queryForList("W_WORKING_FEEDBACKS.filter", filter);
	}
	
	@Override
	public Integer countRow(W_WORKING_FEEDBACKS filter) {
		return (Integer) getSqlMapClientTemplate().queryForObject("W_WORKING_FEEDBACKS.countRow",
				filter);
	}
	
	@SuppressWarnings("unchecked")
	public List<W_WORKING_FEEDBACKS> getIdWorks(String idWorks) {
		return getSqlMapClientTemplate().queryForList("W_WORKING_FEEDBACKS.idWorkingFeedbacks",idWorks);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<W_WORKING_FEEDBACKS> getworkingFeedbacksList(Integer idWorks) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", idWorks);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("W_WORKING_FEEDBACKS.getWorkingFeedbacksList", map);
	}
}