package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.QldnQlMatBang;
import vo.QldnThongTinMayNo;

public class QldnQlMatBangDAOImpl extends SqlMapClientDaoSupport implements QldnQlMatBangDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_QL_MAT_BANG
     *
     * @ibatorgenerated Mon Jul 03 14:28:15 ICT 2017
     */
    public QldnQlMatBangDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_QL_MAT_BANG
     *
     * @ibatorgenerated Mon Jul 03 14:28:15 ICT 2017
     */
    public void insert(QldnQlMatBang record) {
        getSqlMapClientTemplate().insert("QLDN_QL_MAT_BANG.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_QL_MAT_BANG
     *
     * @ibatorgenerated Mon Jul 03 14:28:15 ICT 2017
     */
    public void insertSelective(QldnQlMatBang record) {
        getSqlMapClientTemplate().insert("QLDN_QL_MAT_BANG.ibatorgenerated_insertSelective", record);
    }

	@Override
	public QldnQlMatBang selectByKey(String maTram, String idHopdong) {
		QldnQlMatBang key = new QldnQlMatBang();
        key.setMaTram(maTram);
        key.setIdHopdong(idHopdong);
        QldnQlMatBang record = (QldnQlMatBang) getSqlMapClientTemplate().queryForObject("QLDN_QL_MAT_BANG.selectByKey", key);
        return record;
	}

	@Override
	public int updateByPrimaryKey(QldnQlMatBang record) {
		 int rows = getSqlMapClientTemplate().update("QLDN_QL_MAT_BANG.updateByPrimaryKey", record);
	        return rows;
	}
	public int deleteByPrimaryKey(Integer id) {
		QldnQlMatBang key = new QldnQlMatBang();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("QLDN_QL_MAT_BANG.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
	
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> gettkSlTramQLVaTTListAll(Integer year, String tinh) {
		Map<String, Object> parms = new HashMap<String, Object>();
			
		parms.put("P_YEAR", year);	
		parms.put("P_TINH", tinh);
			
		parms.put("P_DATA", null);
			
		return getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.gettkSlTramQLVaTTListAll", parms);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> gettkTtMatBangTheoDvXHHListAll(Integer year, String tinh) {
			Map<String, Object> parms = new HashMap<String, Object>();
				
			parms.put("P_YEAR", year);	
			parms.put("P_TINH", tinh);
				
			parms.put("P_DATA", null);
				
		return getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.gettkTtMatBangTheoDvXHHListAll", parms);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> gettkTtMatBangTheoDvKhacListAll(Integer year, String tinh) {
		Map<String, Object> parms = new HashMap<String, Object>();
			
		parms.put("P_YEAR", year);	
		parms.put("P_TINH", tinh);
			
		parms.put("P_DATA", null);
			
	return getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.gettkTtMatBangTheoDvKhacListAll", parms);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> gettkChiTietTheoDvXHHListAll(Integer year, String tinh) {
		Map<String, Object> parms = new HashMap<String, Object>();
			
		parms.put("P_YEAR", year);	
		parms.put("P_TINH", tinh);
			
		parms.put("P_DATA", null);
			
	return getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.gettkChiTietTheoDvXHHListAll", parms);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> gettkChiTietTheoDvVNPTListAll(Integer year, String tinh) {
		Map<String, Object> parms = new HashMap<String, Object>();
			
		parms.put("P_YEAR", year);	
		parms.put("P_TINH", tinh);
			
		parms.put("P_DATA", null);
			
	return getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.gettkChiTietTheoDvVNPTListAll", parms);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> gettkChiPhiXHHTtListAll(Integer year, String tinh) {
		Map<String, Object> parms = new HashMap<String, Object>();
			
		parms.put("P_YEAR", year);	
		parms.put("P_TINH", tinh);
			
		parms.put("P_DATA", null);
			
	return getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.gettkChiPhiXHHTtListAll", parms);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<QldnQlMatBang> getTTMatBangList(String maTram, String idHopdong, String sohd, String tinh,
		String huyen, String htSohuu, String dvSohuu, String chuthehd, String dongiathangNovat,
		String hdNgayketthuc, String ngaytinhtien) {
	    Map<String, Object> parms = new HashMap<String, Object>();
	    parms.put("p_maTram", maTram);
	    parms.put("p_idHopdong", idHopdong);
	    parms.put("p_sohd", sohd);
	    parms.put("p_tinh", tinh);
	    parms.put("p_huyen", huyen);
	    parms.put("p_htSohuu", htSohuu);
	    parms.put("p_dvSohuu", dvSohuu);
	    parms.put("p_chuthehd", chuthehd);
	    parms.put("p_dongiathangNovat", dongiathangNovat);
	    parms.put("p_hdNgayketthuc", hdNgayketthuc);
	    parms.put("p_ngaytinhtien", ngaytinhtien);
	    parms.put("p_data", null);
	    	
	    
	    List<QldnQlMatBang> record = getSqlMapClientTemplate().queryForList("QLDN_QL_MAT_BANG.getList", parms);
        return record;
	}

	@Override
	public QldnQlMatBang selectByPrimaryKey(int id) {
	    QldnQlMatBang key = new QldnQlMatBang();
	        key.setId(id);
	        QldnQlMatBang record = (QldnQlMatBang) getSqlMapClientTemplate().queryForObject("QLDN_QL_MAT_BANG.ibatorgenerated_selectByPrimaryKey", key);
	        return record;
	}
}