package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.VRpDyTrx3g;

public class VRpDyTrx3gDAOImpl extends SqlMapClientDaoSupport implements VRpDyTrx3gDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_RP_DY_TRX_3G
     *
     * @ibatorgenerated Sun Dec 15 16:15:04 ICT 2013
     */
    public VRpDyTrx3gDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_RP_DY_TRX_3G
     *
     * @ibatorgenerated Sun Dec 15 16:15:04 ICT 2013
     */
    public void insert(VRpDyTrx3g record) {
        getSqlMapClientTemplate().insert("V_RP_DY_TRX_3G.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_RP_DY_TRX_3G
     *
     * @ibatorgenerated Sun Dec 15 16:15:04 ICT 2013
     */
    public void insertSelective(VRpDyTrx3g record) {
        getSqlMapClientTemplate().insert("V_RP_DY_TRX_3G.ibatorgenerated_insertSelective", record);
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<VRpDyTrx3g> getVRpDyTrx3gFilter(
			String startDate, 
			String endDate, 
			String vendor,
			String rncid,
			String siteCell,
			Integer startRecord, 
			Integer endRecord, 
			String sortfield, 
			String sortorder, 
			String strWhere) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_VENDOR", vendor);
		parms.put("P_RNCID", rncid);
		parms.put("P_SITE_CELL", siteCell);
		parms.put("P_START_RECORD", startRecord);
		parms.put("P_END_RECORD", endRecord);
		parms.put("P_SOFT_FIELD", sortfield);
		parms.put("P_SOFT_ORDER", sortorder);
		parms.put("P_STR_WHERE", strWhere);
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("V_RP_DY_TRX_3G.getVRpDyTrx3gFilter", parms);
	}
    
    @Override
    public int countVRpDyTrx3gFilter(
    		String startDate, 
			String endDate, 
			String vendor,
			String rncid,
			String siteCell,
			String strWhere){
    	
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_START_DATE", startDate);
    	map.put("P_END_DATE", endDate);
    	map.put("P_VENDOR", vendor);
    	map.put("P_RNCID", rncid);
    	map.put("P_SITE_CELL", siteCell);
    	map.put("P_STR_WHERE", strWhere);
    	map.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("V_RP_DY_TRX_3G.countVRpDyTrx3gFilter", map);
    	Integer record = (Integer) map.get("P_DATA");
    	return record;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<VRpDyTrx3g> getRncidList() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("V_RP_DY_TRX_3G.getRncidList", parms);
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<VRpDyTrx3g> getSiteCell3gList() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("V_RP_DY_TRX_3G.getSiteCell3gList", parms);
	}
}