package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.CableLineAttributes;

public class CableLineAttributesDAOImpl extends SqlMapClientDaoSupport implements CableLineAttributesDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public CableLineAttributesDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public int deleteByPrimaryKey(Integer id) {
        CableLineAttributes key = new CableLineAttributes();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("CABLE_LINE_ATTIBUTES.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public void insert(CableLineAttributes record) {
        getSqlMapClientTemplate().insert("CABLE_LINE_ATTIBUTES.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public void insertSelective(CableLineAttributes record) {
        getSqlMapClientTemplate().insert("CABLE_LINE_ATTIBUTES.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public CableLineAttributes selectByPrimaryKey(Integer id) {
        CableLineAttributes key = new CableLineAttributes();
        key.setId(id);
        CableLineAttributes record = (CableLineAttributes) getSqlMapClientTemplate().queryForObject("CABLE_LINE_ATTIBUTES.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public int updateByPrimaryKeySelective(CableLineAttributes record) {
        int rows = getSqlMapClientTemplate().update("CABLE_LINE_ATTIBUTES.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_LINE_ATTIBUTES
     *
     * @ibatorgenerated Thu Dec 13 16:32:59 ICT 2012
     */
    public int updateByPrimaryKey(CableLineAttributes record) {
        int rows = getSqlMapClientTemplate().update("CABLE_LINE_ATTIBUTES.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @Override
	public List<CableLineAttributes> getAttByBscAndCabletype(
			String cableLineId, String cableTypeId, String tranmission) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("cableLineId", cableLineId);
    	parms.put("cableTypeId", cableTypeId);
    	parms.put("tranmission", tranmission);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableLineAttributes> record = getSqlMapClientTemplate().queryForList("CABLE_LINE_ATTIBUTES.getAttByBscAndCabletype", parms);
        return record;
	}

	@Override
	public int insertSelectiveAndReturn(CableLineAttributes cableLineAtt) {
		Integer id = (Integer) getSqlMapClientTemplate().insert("CABLE_LINE_ATTIBUTES.insertSelectiveAndReturn", cableLineAtt);
		return id;
	}

	@Override
	public List<CableLineAttributes> getCableAttFilter(CableLineAttributes cableLineAttributes, int order, String column) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("cableLineId", cableLineAttributes.getCableLineId());
    	parms.put("cableTypeId", cableLineAttributes.getCableTypeId());
    	parms.put("fieldColumnKey", cableLineAttributes.getFieldColumnKey());
    	parms.put("label", cableLineAttributes.getLabel());
    	parms.put("value", cableLineAttributes.getValue());
    	parms.put("order", order);
    	parms.put("column", column);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableLineAttributes> record = getSqlMapClientTemplate().queryForList("CABLE_LINE_ATTIBUTES.getCableAttFilter", parms);
        return record;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<CableLineAttributes> getCableAttByCableLineId(String cableLineId) {
		return getSqlMapClientTemplate().queryForList("CABLE_LINE_ATTIBUTES.getCableAttByCableLineId", cableLineId);
	}

	@Override
	public void deleteByCableLineId(String cableLineId) {
		getSqlMapClientTemplate().delete("CABLE_LINE_ATTIBUTES.deleteByCableLineId", cableLineId);
	}
}