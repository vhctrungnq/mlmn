package dao;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.DetailLostConfig;
import vo.Province;
import vo.SYS_PARAMETER;
import vo.ServiceSiteCell;
import vo.VAlRbLossConfiguration;
import vo.VAlRbLossConfigurationTK;
import vo.VAlRbLossPower;

public class VAlRbLossConfigurationDAOImpl extends SqlMapClientDaoSupport implements VAlRbLossConfigurationDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_CONFIGURATION
     *
     * @ibatorgenerated Mon Dec 03 14:50:28 ICT 2012
     */
    public VAlRbLossConfigurationDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_CONFIGURATION
     *
     * @ibatorgenerated Mon Dec 03 14:50:28 ICT 2012
     */
    public void insert(VAlRbLossConfiguration record) {
        getSqlMapClientTemplate().insert("V_AL_RB_LOSS_CONFIGURATION.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_CONFIGURATION
     *
     * @ibatorgenerated Mon Dec 03 14:50:28 ICT 2012
     */
    public void insertSelective(VAlRbLossConfigurationTK record) {
        getSqlMapClientTemplate().insert("V_AL_RB_LOSS_CONFIGURATION.ibatorgenerated_insertSelective", record);
    }

	
    @Override
	public int deleteByPrimaryKey(Integer id) {
        Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", id);
		int rows = getSqlMapClientTemplate().delete("V_AL_RB_LOSS_CONFIGURATION.deleteByPrimaryKey", parms);
		return rows;
	}
	@SuppressWarnings("unchecked")
	@Override
	public VAlRbLossConfigurationTK selectByPrimaryKey(int id) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID",id);
		parms.put("P_DATA", null);
		List<VAlRbLossConfigurationTK> recordList = getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.selectByPrimaryKey", parms);
		VAlRbLossConfigurationTK record = new VAlRbLossConfigurationTK();
		if (recordList.size()>0)
		{
			record = recordList.get(0);
		}
        return record;
	}

	@Override
	public int updateByPrimaryKeySelective(VAlRbLossConfigurationTK record) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", record.getId());
		parms.put("P_BSCID", record.getBscid());
		parms.put("P_CELLID", record.getCellid());
		parms.put("P_SDATE", record.getSdate());
		parms.put("P_EDATE", record.getEdate());
		parms.put("P_MCH_SDATE", record.getMchSdate());
		parms.put("P_MCH_EDATE", record.getMchEdate());
		parms.put("P_DDH_BAO_MCH", record.getDdhBaoMch());
		parms.put("P_DVT_TEAM_PROCESS", record.getDvtTeamProcess());
		parms.put("P_DVT_USER_PROCESS", record.getDvtUserProcess());
		parms.put("P_UNG_CUU_MPD", record.getUngCuuMpd());
		parms.put("P_CAUSEBY_US", record.getCauseby());
		parms.put("P_ACTION_PROCESS", record.getActionProcess());
		parms.put("P_DESCRIPTION", record.getDescription());
		parms.put("P_SHIFT_ID", record.getShiftId());
		parms.put("P_ALARM_ID", record.getAlarmId());
		parms.put("P_CAUSEBY_SY", record.getCausebySy());
		parms.put("P_ALARM_TYPE", record.getAlarmType());
        int rows = getSqlMapClientTemplate().update("V_AL_RB_LOSS_CONFIGURATION.UpdateVAlRbLossConfiguration", parms);
        return rows;
	}
	

	@SuppressWarnings("unchecked")
	@Override
	public List<DetailLostConfig> getDetail(String bscId, String site,
			String startTime, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startTime);
		map.put("P_BSCID", bscId);
		map.put("P_SITE", site);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getDetail", map);
	}

	
	@SuppressWarnings("unchecked")
	@Override
	public List<String> getCauseBy() {
		List<String> list = new ArrayList<String>();
		list = getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getCauseBy");
		return list;
		
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<VAlRbLossConfigurationTK> getVAlRbLossConfigurationFilter(
			String alarmType, String startTime, String endTime, String bscid, String cellid,
			String dvtTeamProcess, String dvtUserProcess, String ungCuuMpd,
			int totalTimeFN, int totalTimeEN, String statusKTMCH, int order,
			String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startTime);
		map.put("P_SDATE_END", endTime);
		map.put("P_BSCID", bscid);
		map.put("P_CELLID", cellid);
		map.put("P_DVT_TEAM_PROCESS", dvtTeamProcess);
		map.put("P_DVT_USER_PROCESS", dvtUserProcess);
		map.put("P_UNG_CUU_MPD", ungCuuMpd);
		map.put("P_ALARM_TYPE", alarmType);
		map.put("P_TIME_F", totalTimeFN);
		map.put("P_TIME_E", totalTimeEN);
		map.put("P_statusKTMCH", statusKTMCH);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getVAlRbLossConfigurationFilter", map);
	
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossConfig(String alarmType, String typeForm) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_NAME", alarmType);
    	parms.put("P_TYPE", typeForm);
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.titleLossConfig", parms);
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleLossConfigDetail() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.titleLossConfigDetail", parms);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleServiceSiteCell(String netWork) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_NETWORK", netWork);
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.titleServiceSiteCell", parms);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Province> getAllProvince() {
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getAllProvince");
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Province> getDistrictByProvince(String province) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_PROVINCE", province);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getDistrictByProvince", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getBSCIDByDistrict(String district,String netWork) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DISTRICT", district);
		map.put("P_NETWORK", netWork);
		
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getBSCIDByDistrict", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getAddressByDistrict(String district, String netWork) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DISTRICT", district);
		map.put("P_NETWORK", netWork);
		
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getAddressByDistrict", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<ServiceSiteCell> getLossConfigurationService(String netWork,
			ServiceSiteCell serviceSiteCell, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_BSCID", serviceSiteCell.getBscid());
		map.put("P_DISTRICT", serviceSiteCell.getDistrict());
		map.put("P_PROVINCE", serviceSiteCell.getProvince());
		map.put("P_ADDRESS", serviceSiteCell.getAddress());
		map.put("P_NETWORK", netWork);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_CONFIGURATION.getLossConfigurationService", map);
	
	}

	@Override
	public int updateStatusViewByPrimaryKey(String netWork,String status, String id) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", id);
		parms.put("P_STATUS_VIEW", status);
		parms.put("P_NETWORK", netWork);
	
        int rows = getSqlMapClientTemplate().update("V_AL_RB_LOSS_CONFIGURATION.updateStatusViewByPrimaryKey", parms);
        return rows;
		
	}
}