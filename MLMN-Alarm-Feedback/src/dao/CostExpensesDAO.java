package dao;

import java.util.List;

import vo.CostExpenses;
import vo.SYS_PARAMETER;

public interface CostExpensesDAO {
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COST_EXPENSES
     *
     * @ibatorgenerated Tue May 07 16:15:11 ICT 2013
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COST_EXPENSES
     *
     * @ibatorgenerated Tue May 07 16:15:11 ICT 2013
     */
    void insert(CostExpenses record);

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COST_EXPENSES
     *
     * @ibatorgenerated Tue May 07 16:15:11 ICT 2013
     */
    void insertSelective(CostExpenses record);

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COST_EXPENSES
     *
     * @ibatorgenerated Tue May 07 16:15:11 ICT 2013
     */
    CostExpenses selectByPrimaryKey(Integer id);

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COST_EXPENSES
     *
     * @ibatorgenerated Tue May 07 16:15:11 ICT 2013
     */
    int updateByPrimaryKeySelective(CostExpenses record);

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COST_EXPENSES
     *
     * @ibatorgenerated Tue May 07 16:15:11 ICT 2013
     */
    int updateByPrimaryKey(CostExpenses record);
    
   

	List<SYS_PARAMETER> titleForm(String typeForm);

	List<CostExpenses> getExpensesBySupper(String expensesCode);

	int deleteByExpensesCode(String expensesCode);

	List<String> getCostExpensesSearch(String focus, String term);

	CostExpenses checkExit(String expensesCode);

	List<CostExpenses> getAll();

	List<CostExpenses> getExpensesSuper();

	List<CostExpenses> getExpensesChild(String expensesSupper);

	List<CostExpenses> getExpensesSuperAll();

	int updateRootNo(String expensesCode, int num);

	int checkBeforeDalete(String expensesCode);

	List<CostExpenses> getCostExpensesFilter(CostExpenses costExpenses,
			String column, int order);

}