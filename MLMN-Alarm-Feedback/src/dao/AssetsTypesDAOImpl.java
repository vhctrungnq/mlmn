package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AssetsTypes;

public class AssetsTypesDAOImpl extends SqlMapClientDaoSupport implements AssetsTypesDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public AssetsTypesDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public int deleteByPrimaryKey(String asTypesId) {
        AssetsTypes key = new AssetsTypes();
        key.setAsTypesId(asTypesId);
        int rows = getSqlMapClientTemplate().delete("ASSETS_TYPES.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
    
    @Override
    public int deleteById(Integer id) {
        AssetsTypes key = new AssetsTypes();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("ASSETS_TYPES.ibatorgenerated_deleteById", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public void insert(AssetsTypes record) {
        getSqlMapClientTemplate().insert("ASSETS_TYPES.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public void insertSelective(AssetsTypes record) {
        getSqlMapClientTemplate().insert("ASSETS_TYPES.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public AssetsTypes selectByPrimaryKey(String asTypesId) {
        AssetsTypes key = new AssetsTypes();
        key.setAsTypesId(asTypesId);
        AssetsTypes record = (AssetsTypes) getSqlMapClientTemplate().queryForObject("ASSETS_TYPES.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    @Override
    public AssetsTypes selectById(Integer id) {
        AssetsTypes key = new AssetsTypes();
        key.setId(id);
        AssetsTypes record = (AssetsTypes) getSqlMapClientTemplate().queryForObject("ASSETS_TYPES.ibatorgenerated_selectById", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public int updateByPrimaryKeySelective(AssetsTypes record) {
        int rows = getSqlMapClientTemplate().update("ASSETS_TYPES.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_TYPES
     *
     * @ibatorgenerated Tue Apr 16 14:52:56 ICT 2013
     */
    public int updateByPrimaryKey(AssetsTypes record) {
        int rows = getSqlMapClientTemplate().update("ASSETS_TYPES.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AssetsTypes> getAssetsTypesFilter(String asTypesId, String asTypesName, String column, String order) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_AS_TYPES_ID", asTypesId);
    	map.put("P_AS_TYPES_NAME", asTypesName);
    	map.put("P_COLUMN", column);
    	map.put("P_ORDER", order);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_TYPES.getAssetsTypesFilter", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AssetsTypes> getAssetsTypesList() {
    	Map<String, Object> map = new HashMap<String, Object>();
    	
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_TYPES.getAssetsTypesList", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AssetsTypes> getAssetsTypesByAsId(String asTypesId) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_AS_TYPES_ID", asTypesId);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_TYPES.getAssetsTypesByAsId", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AssetsTypes> getDistinctWarehourse() {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_TYPES.getDistinctWarehourse", map);
    }
    
}