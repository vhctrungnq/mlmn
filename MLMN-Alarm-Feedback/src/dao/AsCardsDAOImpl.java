package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AsCards;

public class AsCardsDAOImpl extends SqlMapClientDaoSupport implements AsCardsDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public AsCardsDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AsCards key = new AsCards();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AS_CARDS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public void insert(AsCards record) {
        getSqlMapClientTemplate().insert("AS_CARDS.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public void insertSelective(AsCards record) {
        getSqlMapClientTemplate().insert("AS_CARDS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public AsCards selectByPrimaryKey(Integer id) {
        AsCards key = new AsCards();
        key.setId(id);
        AsCards record = (AsCards) getSqlMapClientTemplate().queryForObject("AS_CARDS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public int updateByPrimaryKeySelective(AsCards record) {
        int rows = getSqlMapClientTemplate().update("AS_CARDS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_CARDS
     *
     * @ibatorgenerated Wed Jul 10 10:27:58 ICT 2013
     */
    public int updateByPrimaryKey(AsCards record) {
        int rows = getSqlMapClientTemplate().update("AS_CARDS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AsCards> getAsCardsFilter(
			String asTypesId, 
			String productCode, 
			String serialNo, 
			String productName, 
			String importDateFrom, 
			String importDateTo, 
			String ject, 
			String vendor, 
			String organization, 
			String departmentId, 
			String exportDateFrom,
			String exportDateTo, 
			String votesNo, 
			String usersEx, 
			String warehourse, 
			String column, 
			String order) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_AS_TYPES_ID", asTypesId);
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_SERIAL_NO", serialNo);
    	map.put("P_PRODUCT_NAME", productName);
    	map.put("P_IMPORT_DATE_FROM", importDateFrom);
    	map.put("P_IMPORT_DATE_TO", importDateTo);
    	map.put("P_JECT", ject);
    	map.put("P_VENDOR", vendor);
    	map.put("P_ORGANIZATION", organization);
    	map.put("P_DEPARTMENT_ID", departmentId);
    	map.put("P_EXPORT_DATE_FROM", exportDateFrom);
    	map.put("P_EXPORT_DATE_TO", exportDateTo);
    	map.put("P_VOTES_NO", votesNo);
    	map.put("P_USERS_EX", usersEx);
    	map.put("P_WAREHOURSE", warehourse);
    	map.put("P_COLUMN", column);
    	map.put("P_ORDER", order);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AS_CARDS.getAsCardsFilter", map);
    }
    
    @Override
	public AsCards getAmountDontUse(String id) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_ID", id);
		map.put("P_DATA", null);
		
		return (AsCards) getSqlMapClientTemplate().queryForObject("AS_CARDS.getAmountDontUse", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AsCards> getAsCardsByCodeSerial(String productCode, String serialNo, String id) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_SERIAL_NO", serialNo);
    	map.put("P_ID", id);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AS_CARDS.getAsCardsByCodeSerial", map);
    }
    
    @Override
    public int updateXetDuyet(AsCards asCards, String ngayXuat) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", asCards.getProductCode());
    	map.put("P_SERIAL_NO", asCards.getSerialNo());
    	map.put("P_EXPORT_DATE", ngayXuat);
    	map.put("P_VOTES_NO", asCards.getVotesNo());
    	map.put("P_USERS_EX", asCards.getUsersEx());
    	map.put("P_ORGANIZATION", asCards.getOrganization());
    	map.put("P_DEPARTMENT_ID", asCards.getDepartmentId());
    	map.put("P_AMOUNT", asCards.getAmount());
    	map.put("P_LY_DO_XUAT", asCards.getLyDoXuat());
    	map.put("P_NGUON_LAY_TB", asCards.getNguonLayTb());
    	map.put("P_BAO_GOM_THIET_BI", asCards.getBaoGomThietBi());
    	
        int rows = getSqlMapClientTemplate().update("AS_CARDS.updateXetDuyet", map);
        return rows;
    }
}