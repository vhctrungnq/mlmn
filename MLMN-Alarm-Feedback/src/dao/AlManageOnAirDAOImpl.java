package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlManageOnAir;
import vo.AlManageOnAir2g3g;

public class AlManageOnAirDAOImpl extends SqlMapClientDaoSupport implements AlManageOnAirDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public AlManageOnAirDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AlManageOnAir key = new AlManageOnAir();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_MANAGE_ON_AIR.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public void insert(AlManageOnAir record) {
        getSqlMapClientTemplate().insert("AL_MANAGE_ON_AIR.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public void insertSelective(AlManageOnAir record) {
        getSqlMapClientTemplate().insert("AL_MANAGE_ON_AIR.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public AlManageOnAir selectByPrimaryKey(Integer id) {
        AlManageOnAir key = new AlManageOnAir();
        key.setId(id);
        AlManageOnAir record = (AlManageOnAir) getSqlMapClientTemplate().queryForObject("AL_MANAGE_ON_AIR.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public int updateByPrimaryKeySelective(AlManageOnAir record) {
        int rows = getSqlMapClientTemplate().update("AL_MANAGE_ON_AIR.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_MANAGE_ON_AIR
     *
     * @ibatorgenerated Fri Dec 20 10:58:20 ICT 2013
     */
    public int updateByPrimaryKey(AlManageOnAir record) {
        int rows = getSqlMapClientTemplate().update("AL_MANAGE_ON_AIR.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @Override
    public int updateByUniqueKey(AlManageOnAir record) {
        int rows = getSqlMapClientTemplate().update("AL_MANAGE_ON_AIR.ibatorgenerated_updateByUniqueKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir> getAlManageOnAirFilter(String projectCode, String network, String ne, String siteid,
			Integer startRecord, Integer endRecord, String sortfield, String sortorder, String strWhere) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PROJECT_CODE", projectCode);
    	map.put("P_NETWORK", network);
    	map.put("P_NE", ne);
    	map.put("P_SITEID", siteid);
    	map.put("P_START_RECORD", startRecord);
    	map.put("P_END_RECORD", endRecord);
    	map.put("P_SOFT_FIELD", sortfield);
    	map.put("P_SOFT_ORDER", sortorder);
    	map.put("P_STR_WHERE", strWhere);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.getAlManageOnAirFilter", map);
    }
    
    @Override
    public int countAlManageOnAirFilter(String projectCode, String network, String ne, String siteid, String strWhere){
    	
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PROJECT_CODE", projectCode);
    	map.put("P_NETWORK", network);
    	map.put("P_NE", ne);
    	map.put("P_SITEID", siteid);
    	map.put("P_STR_WHERE", strWhere);
    	map.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("AL_MANAGE_ON_AIR.countAlManageOnAirFilter", map);
    	Integer record = (Integer) map.get("P_DATA");
    	return record;
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir> checkOnAirPrimaryKey(String siteid, String ne, String network, String projectId, String id) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_SITEID", siteid);
    	map.put("P_NE", ne);
    	map.put("P_NETWORK", network);
    	map.put("P_PROJECT_ID", projectId);
    	map.put("P_ID", id);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.checkOnAirPrimaryKey", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir2g3g> getAlManageOnAir2g3g(String startDate, String endDate) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_START_DATE", startDate);
    	map.put("P_END_DATE", endDate);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.getAlManageOnAir2g3g", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir2g3g> getAlManageOnAirByCode(String startDate, String endDate) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_START_DATE", startDate);
    	map.put("P_END_DATE", endDate);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.getAlManageOnAirByCode", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir2g3g> getReportProjectType(String startDate, String endDate, String year) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_START_DATE", startDate);
    	map.put("P_END_DATE", endDate);
    	map.put("P_YEAR", year);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.getReportProjectType", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir2g3g> getReportSiteType(String year) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_YEAR", year);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.getReportSiteType", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<AlManageOnAir2g3g> getReportSynthesis(String startDate, String endDate, String year) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_START_DATE", startDate);
    	map.put("P_END_DATE", endDate);
    	map.put("P_YEAR", year);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("AL_MANAGE_ON_AIR.getReportSynthesis", map);
    }
}