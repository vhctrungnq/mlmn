package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.AsExportWarehouse;
import vo.AsImportWarehouse;
import vo.AssetsInventorying;
import vo.AssetsWarranty;
import vo.SYS_PARAMETER;

public class AssetsInventoryingDAOImpl extends SqlMapClientDaoSupport implements AssetsInventoryingDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public AssetsInventoryingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AssetsInventorying key = new AssetsInventorying();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("ASSETS_INVENTORYING.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public void insert(AssetsInventorying record) {
        getSqlMapClientTemplate().insert("ASSETS_INVENTORYING.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public void insertSelective(AssetsInventorying record) {
        getSqlMapClientTemplate().insert("ASSETS_INVENTORYING.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public AssetsInventorying selectByPrimaryKey(Integer id) {
        AssetsInventorying key = new AssetsInventorying();
        key.setId(id);
        AssetsInventorying record = (AssetsInventorying) getSqlMapClientTemplate().queryForObject("ASSETS_INVENTORYING.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    public AssetsInventorying selectViewById(Integer id) {
        AssetsInventorying key = new AssetsInventorying();
        key.setId(id);
        AssetsInventorying record = (AssetsInventorying) getSqlMapClientTemplate().queryForObject("ASSETS_INVENTORYING.selectViewById", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public int updateByPrimaryKeySelective(AssetsInventorying record) {
        int rows = getSqlMapClientTemplate().update("ASSETS_INVENTORYING.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_INVENTORYING
     *
     * @ibatorgenerated Fri May 03 16:24:45 ICT 2013
     */
    public int updateByPrimaryKey(AssetsInventorying record) {
        int rows = getSqlMapClientTemplate().update("ASSETS_INVENTORYING.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
    public List<AssetsInventorying> getAssetsInventoryingFilter(String dotKiemKe, String lech, String productCode, String productName, String serialNo, String departmentUse, String departmentId, String users, String column, String order) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_DOT_KIEM_KE", dotKiemKe);
    	map.put("P_LECH", lech);
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_PRODUCT_NAME", productName);
    	map.put("P_SERIAL_NO", serialNo);
    	map.put("P_DEPARTMENT_USE", departmentUse);
    	map.put("P_DEPARTMENT_ID", departmentId);
    	map.put("P_USERS", users);
    	map.put("P_COLUMN", column);
    	map.put("P_ORDER", order);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_INVENTORYING.getAssetsInventoryingFilter", map);
    }
    
    @SuppressWarnings("unchecked")
    @Override
	public List<SYS_PARAMETER> getLechList() {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_INVENTORYING.getLechList", map);
    }
	
	@SuppressWarnings("unchecked")
	public List<String> getDotkiemke() {
		return getSqlMapClientTemplate().queryForList("ASSETS_INVENTORYING.getDotkiemke");
	}	

	@Override
	public AsImportWarehouse getSlSoSach(String productCode, String serialNo) {
		Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_SERIAL", serialNo);
		map.put("P_DATA", null);
		AsImportWarehouse record = (AsImportWarehouse) getSqlMapClientTemplate().queryForObject("ASSETS_INVENTORYING.getSlSoSach", map);
		return record;
    }
	
	@Override
	public AsExportWarehouse getSlDangSd(String productCode, String serialNo) {
		Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_SERIAL", serialNo);
		map.put("P_DATA", null);
		AsExportWarehouse record = (AsExportWarehouse) getSqlMapClientTemplate().queryForObject("ASSETS_INVENTORYING.getSlDangSd", map);
		return record;
    }
	
	@Override
	public AssetsWarranty getSlBaohanh(String productCode, String serialNo) {
		Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_SERIAL", serialNo);
		map.put("P_DATA", null);
		AssetsWarranty record = (AssetsWarranty) getSqlMapClientTemplate().queryForObject("ASSETS_INVENTORYING.getSlBaohanh", map);
		return record;
    }
}