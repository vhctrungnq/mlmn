package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.CableAttributesMaster;

public class CableAttributesMasterDAOImpl extends SqlMapClientDaoSupport implements CableAttributesMasterDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public CableAttributesMasterDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public int deleteByPrimaryKey(Integer id) {
        CableAttributesMaster key = new CableAttributesMaster();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("CABLE_ATTRIBUTES_MASTER.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public void insert(CableAttributesMaster record) {
        getSqlMapClientTemplate().insert("CABLE_ATTRIBUTES_MASTER.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public void insertSelective(CableAttributesMaster record) {
        getSqlMapClientTemplate().insert("CABLE_ATTRIBUTES_MASTER.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public CableAttributesMaster selectByPrimaryKey(Integer id) {
        CableAttributesMaster key = new CableAttributesMaster();
        key.setId(id);
        CableAttributesMaster record = (CableAttributesMaster) getSqlMapClientTemplate().queryForObject("CABLE_ATTRIBUTES_MASTER.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public int updateByPrimaryKeySelective(CableAttributesMaster record) {
        int rows = getSqlMapClientTemplate().update("CABLE_ATTRIBUTES_MASTER.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ATTRIBUTES_MASTER
     *
     * @ibatorgenerated Thu Dec 13 16:26:10 ICT 2012
     */
    public int updateByPrimaryKey(CableAttributesMaster record) {
        int rows = getSqlMapClientTemplate().update("CABLE_ATTRIBUTES_MASTER.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@Override
	public List<CableAttributesMaster> getCableAttributesMasterFilter(
			CableAttributesMaster cableAttributesMaster, int order, String column) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("label", cableAttributesMaster.getLabel());
		parms.put("cableTypeId", cableAttributesMaster.getCableTypeId());
		parms.put("description", cableAttributesMaster.getDescription());
		parms.put("order", order);
    	parms.put("column", column);
		
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableAttributesMaster> record = getSqlMapClientTemplate().queryForList("CABLE_ATTRIBUTES_MASTER.getCableAttributesMasterFilter", parms);
        return record;
	}

	@Override
	public CableAttributesMaster getByLabelAndCableTypeId(String label, String cableTypeId) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("label", label);
		parms.put("cableTypeId", cableTypeId);
		
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableAttributesMaster> record = getSqlMapClientTemplate().queryForList("CABLE_ATTRIBUTES_MASTER.getByLabelAndCableTypeId", parms);
		
		if (record != null && record.size() > 0)
			return record.get(0);
		return null;
	}

	@Override
	public Integer checkUsingAttMaster(Integer id) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("id", id);
		parms.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("CABLE_ATTRIBUTES_MASTER.checkUsingAttMaster", parms);
    	Integer record = (Integer) parms.get("P_DATA");
    	return record;
	}
}