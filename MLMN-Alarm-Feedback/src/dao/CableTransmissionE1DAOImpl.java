package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.CableTransmission;
import vo.CableTransmissionE1;
import vo.SYS_PARAMETER;

public class CableTransmissionE1DAOImpl extends SqlMapClientDaoSupport implements CableTransmissionE1DAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public CableTransmissionE1DAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        CableTransmissionE1 key = new CableTransmissionE1();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("CABLE_TRANSMISSION_E1.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public void insert(CableTransmissionE1 record) {
        getSqlMapClientTemplate().insert("CABLE_TRANSMISSION_E1.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public void insertSelective(CableTransmissionE1 record) {
        getSqlMapClientTemplate().insert("CABLE_TRANSMISSION_E1.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public CableTransmissionE1 selectByPrimaryKey(Integer id) {
        CableTransmissionE1 key = new CableTransmissionE1();
        key.setId(id);
        CableTransmissionE1 record = (CableTransmissionE1) getSqlMapClientTemplate().queryForObject("CABLE_TRANSMISSION_E1.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public int updateByPrimaryKeySelective(CableTransmissionE1 record) {
        int rows = getSqlMapClientTemplate().update("CABLE_TRANSMISSION_E1.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION_E1
     *
     * @ibatorgenerated Thu Mar 21 14:19:35 ICT 2013
     */
    public int updateByPrimaryKey(CableTransmissionE1 record) {
        int rows = getSqlMapClientTemplate().update("CABLE_TRANSMISSION_E1.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@Override
	public CableTransmissionE1 checkExitByDev(String directionId, String dev,String typeCab) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_DIRECTION_ID", 		directionId);
    	parms.put("P_DEV", 					dev);
    	parms.put("P_TYPE_CAB", 			typeCab);
    	
		parms.put("P_DATA", 				null);
		@SuppressWarnings("unchecked")
		List<CableTransmissionE1> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION_E1.checkExitByDev", parms);
        if (record.size()>0)
        	return record.get(0);
		return null;
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeC, String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_CAB", typeC);  
		map.put("P_TYPE_FORM", typeForm); 
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION_E1.titleForm", map);
	}

/*	@Override
	public List<String> getCableE1Search(String focus, String term) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("focus", 			focus);
    	parms.put("term", 			term);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<String> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION_E1.getCableE1Search", parms);
        return record;
	}*/

	@Override
	public List<CableTransmissionE1> getCableE1Filter(
			CableTransmissionE1 cableE1, String column, int order, Integer delData) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_DIRECTION_ID", 		cableE1.getDirectionId());
    	parms.put("P_DEV", 					cableE1.getDev());
    	parms.put("P_SNT", 					cableE1.getSnt());
    	parms.put("P_DIP", 					cableE1.getDip());
    	parms.put("P_DDF_OUT", 				cableE1.getDdfOut());
    	parms.put("P_STATE", 				cableE1.getState());
    	parms.put("P_PLANE_NEXT", 			cableE1.getPlaneNext());
    	parms.put("P_DESCRIPTION", 			cableE1.getDescription());
    	parms.put("P_TYPE_CAB", 			cableE1.getTypeCab());
    	parms.put("P_order", 				order);
    	parms.put("P_column", 				column);
    	parms.put("P_delData", 				delData);
		parms.put("P_DATA", 				null);
    	
		@SuppressWarnings("unchecked")
		List<CableTransmissionE1> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION_E1.getCableE1Filter", parms);
        return record;
	}

	@Override
	public List<String> getCableE1Search(String focus, String typeC, String term) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("focus", 			focus);
    	parms.put("typeC", 			typeC);
    	parms.put("term", 			term);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<String> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION_E1.getCableE1Search", parms);
        return record;
	}
}