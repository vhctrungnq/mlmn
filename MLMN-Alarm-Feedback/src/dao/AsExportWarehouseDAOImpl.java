package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.AsExportWarehouse;
import vo.AsImportWarehouse;
import vo.SYS_PARAMETER;
import vo.alarm.utils.AsExportFilter;

public class AsExportWarehouseDAOImpl extends SqlMapClientDaoSupport implements AsExportWarehouseDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public AsExportWarehouseDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public int deleteByPrimaryKey(String id) {
        AsExportWarehouse key = new AsExportWarehouse();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AS_EXPORT_WAREHOUSE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public void insert(AsExportWarehouse record) {
        getSqlMapClientTemplate().insert("AS_EXPORT_WAREHOUSE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public void insertSelective(AsExportWarehouse record) {
        getSqlMapClientTemplate().insert("AS_EXPORT_WAREHOUSE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public AsExportWarehouse selectByPrimaryKey(String id) {
        AsExportWarehouse key = new AsExportWarehouse();
        key.setId(id);
        AsExportWarehouse record = (AsExportWarehouse) getSqlMapClientTemplate().queryForObject("AS_EXPORT_WAREHOUSE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public int updateByPrimaryKeySelective(AsExportWarehouse record) {
        int rows = getSqlMapClientTemplate().update("AS_EXPORT_WAREHOUSE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AS_EXPORT_WAREHOUSE
     *
     * @ibatorgenerated Tue Apr 23 17:22:40 ICT 2013
     */
    public int updateByPrimaryKey(AsExportWarehouse record) {
        int rows = getSqlMapClientTemplate().update("AS_EXPORT_WAREHOUSE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<AsExportWarehouse> inPhieu(String sdate, String edate,
    		String productCode, String assetsName,String serialNo,String vendor,
    		String boPhanSd,String donViSd,String sophieu,String usersEx){
		Map<String, Object> map = new HashMap<String, Object>();
		
		map.put("p_sdate", sdate);
		map.put("p_edate", edate);
		map.put("p_productCode", productCode);
		map.put("p_assetsName", assetsName);
		map.put("p_serialNo", serialNo);
		map.put("p_vendor", vendor);
		map.put("p_boPhanSd", boPhanSd);
		map.put("p_donViSd", donViSd);
		map.put("p_sophieu", sophieu);
		map.put("p_usersEx", usersEx);
		
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("AS_EXPORT_WAREHOUSE.inPhieuList", map); 
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<AsExportWarehouse> getAsExportWarehouse(AsExportFilter filter, int order, String column){
		Map<String, Object> map = new HashMap<String, Object>();
		
		map.put("p_assetsName", filter.getAssetsName());
		map.put("p_asTypesName", filter.getAsTypesName());
		map.put("p_departmentId", filter.getDepartmentId());
		map.put("p_edate", filter.getEdate());
		map.put("p_id", filter.getIdAssets());
		map.put("p_organization", filter.getOrganization());
		map.put("p_productCode", filter.getProductCode());
		map.put("p_sdate", filter.getSdate());
		map.put("p_serialNo", filter.getSerialNo());
		map.put("p_vendor", filter.getVendor()); 
		map.put("p_sophieu", filter.getVotesNo());
		map.put("p_nguoiSD", filter.getUsersEx());
		
		map.put("p_column", column);
		map.put("p_order", order);
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("AS_EXPORT_WAREHOUSE.getAsExportWarehouse", map); 
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeForm){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("TYPE_FORM", typeForm); 
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("AS_EXPORT_WAREHOUSE.titleForm", map);
	}
	
	@SuppressWarnings("unchecked")
	public List<String> getProductCode() {
    	return getSqlMapClientTemplate().queryForList("AS_EXPORT_WAREHOUSE.getProductCode");
    }
	
	@Override
	public AsImportWarehouse getAmountByProCode(String productCode,String importDate) {
		Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_IMPORT_DATE", importDate);
		map.put("P_DATA", null);
		AsImportWarehouse record = (AsImportWarehouse) getSqlMapClientTemplate().queryForObject("AS_EXPORT_WAREHOUSE.getAmountByProCode", map);
		return record;
    }
	
	@Override
	public AsExportWarehouse getAmountExByProCode(String productCode, String serial) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SERIAL", serial);
    	map.put("P_PRODUCT_CODE", productCode);
		map.put("P_DATA", null);
		AsExportWarehouse record = (AsExportWarehouse) getSqlMapClientTemplate().queryForObject("AS_EXPORT_WAREHOUSE.getAmountExByProCode", map);
		return record;
    }  
	
	@SuppressWarnings("unchecked")
	public List<String> getMataisan(String term) {
		return getSqlMapClientTemplate().queryForList("AS_EXPORT_WAREHOUSE.getMataisan", term);
	}
	
	@Override
	public AsImportWarehouse getAllByProCode(String productCode){
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
		map.put("P_DATA", null);
		AsImportWarehouse record = (AsImportWarehouse) getSqlMapClientTemplate().queryForObject("AS_EXPORT_WAREHOUSE.getAllByProCode", map);
		return record;
    }
	
	@SuppressWarnings("unchecked")
	@Override
	public List<AsImportWarehouse> getSeriNoByProCode(String productCode){
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
		map.put("P_DATA", null); 
		
		return getSqlMapClientTemplate().queryForList("AS_EXPORT_WAREHOUSE.getSeriNoByProCode", map);
    }
}