package vn.com.vhc.vmsc2.statistics.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vn.com.vhc.vmsc2.statistics.domain.IPBBLinkTruyenDan;
import vn.com.vhc.vmsc2.statistics.domain.VDyIpbbLink;

public class VDyIpbbLinkDAOImpl extends SqlMapClientDaoSupport implements VDyIpbbLinkDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_DY_IPBB_LINK
     *
     * @ibatorgenerated Wed Nov 21 09:48:55 ICT 2012
     */
    public VDyIpbbLinkDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_DY_IPBB_LINK
     *
     * @ibatorgenerated Wed Nov 21 09:48:55 ICT 2012
     */
    public void insert(VDyIpbbLink record) {
        getSqlMapClientTemplate().insert("V_DY_IPBB_LINK.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_DY_IPBB_LINK
     *
     * @ibatorgenerated Wed Nov 21 09:48:55 ICT 2012
     */
    public void insertSelective(VDyIpbbLink record) {
        getSqlMapClientTemplate().insert("V_DY_IPBB_LINK.ibatorgenerated_insertSelective", record);
    }
    
    @SuppressWarnings("unchecked")
    public List<VDyIpbbLink> filter(String startDate, String endDate, String link, String direction){
    	Map<String, String> map = new HashMap<String, String>();
    	map.put("startDate",startDate);
    	map.put("endDate",endDate);
    	map.put("link",link);
    	map.put("direction",direction);
    	return getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filter", map);
    }
    
    public List<VDyIpbbLink> filterBadLink(String startDate,String endDate,String link, String direction) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_START_DATE", 		startDate);
    	parms.put("P_END_DATE", 		endDate);
    	parms.put("P_LINK", 		link);
    	parms.put("P_DIRECTION", 		direction);
    	parms.put("P_DATA", 				null);
    	
		@SuppressWarnings("unchecked")
		List<VDyIpbbLink> record = getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filterBadLink", parms);
        return record;
	}
    
    /**
     * @author ganaxy
     * @createDate 05-11-2015
     * @decription Bao cao BW link truyen dan tuan, thang, quy, nam
     * 
     * */
    
    public List<IPBBLinkTruyenDan> filterWeek(int startYear, int endYear, int startWeek, 
    		int endWeek, String link, String direction){
		Map<String, Object> parms = new HashMap<String, Object>();

		parms.put("startYear", startYear);
		parms.put("endYear", endYear);
		parms.put("startWeek", startWeek);
		parms.put("endWeek", endWeek);
		parms.put("link", link);
		parms.put("direction", direction);  
    	parms.put("P_DATA",null);
    	
		@SuppressWarnings("unchecked")
		List<IPBBLinkTruyenDan> record = getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filterWeek", parms);
        return record;
	}
    
    public List<IPBBLinkTruyenDan> filterMonth(int startYear, int endYear, int startMonth, int endMonth, String link, String direction){
		Map<String, Object> parms = new HashMap<String, Object>();

		parms.put("startYear", startYear);
		parms.put("endYear", endYear);
		parms.put("startMonth", startMonth);
		parms.put("endMonth", endMonth);
		parms.put("link", link);
		parms.put("direction", direction);  
    	parms.put("P_DATA",null);
    	
		@SuppressWarnings("unchecked")
		List<IPBBLinkTruyenDan> record = getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filterMonth", parms);
        return record;
	}
    
    public List<IPBBLinkTruyenDan> filterQuarter(int startYear, int endYear, int startQuarter, int endQuarter, String link, String direction){
		Map<String, Object> parms = new HashMap<String, Object>();

		parms.put("startYear", startYear);
		parms.put("endYear", endYear);
		parms.put("startQuarter", startQuarter);
		parms.put("endQuarter", endQuarter);
		parms.put("link", link);
		parms.put("direction", direction);  
    	parms.put("P_DATA",null);
    	
		@SuppressWarnings("unchecked")
		List<IPBBLinkTruyenDan> record = getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filterQuarter", parms);
        return record;
	}
    
    public List<IPBBLinkTruyenDan> filterYear(int startYear, int endYear, String link, String direction){
		Map<String, Object> parms = new HashMap<String, Object>();

		parms.put("startYear", startYear);
		parms.put("endYear", endYear); 
		parms.put("link", link);
		parms.put("direction", direction);  
    	parms.put("P_DATA",null);
    	
		@SuppressWarnings("unchecked")
		List<IPBBLinkTruyenDan> record = getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filterYear", parms);
        return record;
	}
    
    public List<VDyIpbbLink> filterOption(String startTime, String endTime, String link, String direction){
		Map<String, Object> parms = new HashMap<String, Object>();

		parms.put("startTime", startTime);
		parms.put("endTime", endTime); 
		parms.put("link", link);
		parms.put("direction", direction);  
    	parms.put("P_DATA",null);
    	
		@SuppressWarnings("unchecked")
		List<VDyIpbbLink> record = getSqlMapClientTemplate().queryForList("V_DY_IPBB_LINK.filterOption", parms);
        return record;
	}
}