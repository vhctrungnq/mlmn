package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.AlDyRpErrorDip;
import vo.SYS_PARAMETER;
import vo.WarningDipSame;

public class AlDyRpErrorDipDAOImpl extends SqlMapClientDaoSupport implements AlDyRpErrorDipDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_DY_RP_ERROR_DIP
     *
     * @ibatorgenerated Fri Jun 28 09:10:40 ICT 2013
     */
    public AlDyRpErrorDipDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_DY_RP_ERROR_DIP
     *
     * @ibatorgenerated Fri Jun 28 09:10:40 ICT 2013
     */
    public void insert(AlDyRpErrorDip record) {
        getSqlMapClientTemplate().insert("AL_DY_RP_ERROR_DIP.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AL_DY_RP_ERROR_DIP
     *
     * @ibatorgenerated Fri Jun 28 09:10:40 ICT 2013
     */
    public void insertSelective(AlDyRpErrorDip record) {
        getSqlMapClientTemplate().insert("AL_DY_RP_ERROR_DIP.ibatorgenerated_insertSelective", record);
    }
    
    @Override
	public int updateByPrimaryKeySelective(AlDyRpErrorDip record) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", record.getId());
		map.put("P_DAY", record.getDay());
		map.put("P_BSCID", record.getBscid());
		map.put("P_DIP", record.getDip());
		map.put("P_TEAM_PROCESS", record.getTeamProcess());
		map.put("P_USER_PROCESS", record.getUserProcess());
		map.put("P_CAUSEBY_CONTENT", record.getCausebyContent());
		map.put("P_RESULT_CONTENT", record.getResultContent());
		map.put("P_FAULT", record.getFaultType());
		map.put("P_TRANS_TYPE", record.getTransType());
		map.put("P_SHIFT_ID", record.getShiftId());
		map.put("P_Sdate", record.getSdate());
		map.put("P_EDATE", record.getEdate());
        int rows = getSqlMapClientTemplate().update("AL_DY_RP_ERROR_DIP.update", map);
        return rows;
	}

	@Override
	public int deleteByPrimaryKey(Integer id) {
		AlDyRpErrorDip key = new AlDyRpErrorDip();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("AL_DY_RP_ERROR_DIP.deleteByPrimaryKey", key);
        return rows;
	}

	@Override
	public AlDyRpErrorDip selectByPrimaryKey(int id) {
		AlDyRpErrorDip key = new AlDyRpErrorDip();
        key.setId(id);
        AlDyRpErrorDip record = (AlDyRpErrorDip) getSqlMapClientTemplate().queryForObject("AL_DY_RP_ERROR_DIP.selectByPrimaryKey", key);
        return record;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpErrorDip> getAlDyRpErrorDipFilter(String sday,
			String eday, String bscid,  String dip,
			String teamProcess, String userProcess,String transType,String faultType,
			int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDAY", sday);
		map.put("P_EDAY", eday);
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_TEAM_PROCESS", teamProcess);
		map.put("P_USER_PROCESS", userProcess);
		map.put("P_TRANS_TYPE", transType);
		map.put("P_Fault_Type", faultType);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_ERROR_DIP.getAlDyRpErrorDipFilter", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<WarningDipSame> getAlarmSameSystem(String bscid, String dip,
			String day) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_DAY", day);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_ERROR_DIP.getAlarmSameSystem", map);

	}

	@Override
	public Integer getItemByBSC_DIP_DAY(String bscid, String dip,
			String dayStr) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_DAY", dayStr);
		map.put("P_DATA", null);
		getSqlMapClientTemplate().queryForObject("AL_DY_RP_ERROR_DIP.getItemByBSC_DIP_DAY", map);
    	Integer record = (Integer) map.get("P_DATA");
    	return record;

	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleErrorDip(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_ERROR_DIP.titleErrorDip", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getDip(String term) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DIP", term);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_ERROR_DIP.getDip", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getFaultTypeList() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_ERROR_DIP.getFaultTypeList", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<String> getTransTypeList() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_ERROR_DIP.getTransTypeList", map);
	}
}