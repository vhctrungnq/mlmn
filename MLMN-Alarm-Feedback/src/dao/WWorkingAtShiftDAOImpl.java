package dao;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.SYS_PARAMETER;
import vo.WWorkingAtShift;


public class WWorkingAtShiftDAOImpl extends SqlMapClientDaoSupport implements WWorkingAtShiftDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public WWorkingAtShiftDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public int deleteByPrimaryKey(Integer id) {
        WWorkingAtShift key = new WWorkingAtShift();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("W_WORKING_AT_SHIFT.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public void insert(WWorkingAtShift record) {
        getSqlMapClientTemplate().insert("W_WORKING_AT_SHIFT.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public void insertSelective(WWorkingAtShift record) {
        getSqlMapClientTemplate().insert("W_WORKING_AT_SHIFT.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public WWorkingAtShift selectByPrimaryKey(Integer id) {
        WWorkingAtShift key = new WWorkingAtShift();
        key.setId(id);
        WWorkingAtShift record = (WWorkingAtShift) getSqlMapClientTemplate().queryForObject("W_WORKING_AT_SHIFT.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public int updateByPrimaryKeySelective(WWorkingAtShift record) {
        int rows = getSqlMapClientTemplate().update("W_WORKING_AT_SHIFT.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table W_WORKING_AT_SHIFT
     *
     * @ibatorgenerated Fri Mar 28 15:37:47 ICT 2014
     */
    public int updateByPrimaryKey(WWorkingAtShift record) {
        int rows = getSqlMapClientTemplate().update("W_WORKING_AT_SHIFT.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeFuntion, String typeForm) {
		Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_TYPE_FUNTION", typeFuntion);	
   		parms.put("P_FORM", typeForm);
   		parms.put("P_DATA", null);	
   		return getSqlMapClientTemplate().queryForList("W_WORKING_AT_SHIFT.titleForm", parms);
	}
	
	
	
	@SuppressWarnings("unchecked")
	@Override
	public List<String> getWorkFilterCondition(String columnName,
			String type) {
		Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_COLUMN_NAME", columnName);	
   		parms.put("P_TYPE_FUNTION", type);	
   		parms.put("P_DATA", null);	
   		return getSqlMapClientTemplate().queryForList("W_WORKING_AT_SHIFT.getWorkFilterCondition", parms);
	}
	/*DANH SACH CONG VIEC CO DINH, CONG VIEC CAN LAM TRONG CA*/
	@SuppressWarnings("unchecked")
	@Override
	public List<WWorkingAtShift> getListFilter(String type, String ngayTK,
			String ngayTKTo, String userDelivered, String workName, String caTK,String region) {
		Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_TYPE_FUNTION", type);	
   		parms.put("P_FROM_DAY", ngayTK);	
   		parms.put("P_TO_DAY", ngayTKTo);	
   		parms.put("P_USER_DELIVERED", userDelivered);	
   		parms.put("P_WORK_NAME", workName);	
   		parms.put("P_SHIFT", caTK);
   		parms.put("P_REGION", region);
   		parms.put("P_DATA", null);	
   		return getSqlMapClientTemplate().queryForList("W_WORKING_AT_SHIFT.getListFilter", parms);
	}
	/*them moi cong viec lam trong ca*/
	@Override
	public int addWorkInShift(WWorkingAtShift workShift, Date nhanNgayTruc,
			String nhanCaTruc, String nhanUsername, String nhanCaVien,String maPhong,String username) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_User_Delivered", workShift.getUserDelivered());
   		parms.put("P_Work_Name", workShift.getWorkName());
   		parms.put("P_Work_Type", workShift.getWorkType());
   		parms.put("P_DEADLINE", workShift.getDeadline());
   		parms.put("P_NHAN_USERNAME",nhanUsername);
   		parms.put("P_NHAN_CA_VIEN", nhanCaVien);
   		parms.put("P_NHAN_CA_TRUC", nhanCaTruc);
   		parms.put("P_NHAN_NGAY_TRUC", nhanNgayTruc);
   		parms.put("P_MA_PHONG",maPhong);
   		parms.put("P_Created_By",username);
   		parms.put("P_REGION",workShift.getRegion());
   		parms.put("P_DATA", null);	
   		getSqlMapClientTemplate().queryForObject("W_WORKING_AT_SHIFT.addWorkInShift", parms);
   		Integer record = (Integer) parms.get("P_DATA");
      	return record;
	}
}