package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.SYS_PARAMETER;
import vo.VAlRbLossComunication;
import vo.VAlRbLossConfiguration;
import vo.VAlRbLossConfigurationTK;

public class VAlRbLossComunicationDAOImpl extends SqlMapClientDaoSupport implements VAlRbLossComunicationDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_COMUNICATION
     *
     * @ibatorgenerated Thu Dec 13 14:46:06 ICT 2012
     */
    public VAlRbLossComunicationDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_COMUNICATION
     *
     * @ibatorgenerated Thu Dec 13 14:46:06 ICT 2012
     */
    public void insert(VAlRbLossComunication record) {
        getSqlMapClientTemplate().insert("V_AL_RB_LOSS_COMUNICATION.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_COMUNICATION
     *
     * @ibatorgenerated Thu Dec 13 14:46:06 ICT 2012
     */
    public void insertSelective(VAlRbLossComunication record) {
        getSqlMapClientTemplate().insert("V_AL_RB_LOSS_COMUNICATION.ibatorgenerated_insertSelective", record);
    }

	/*@SuppressWarnings("unchecked")
	@Override
	public List<VAlRbLossComunication> getAllComunicationInDay(String day, String bscid,
			String dip, String teamProcess, int totalTimeN, int order,
			String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", day);
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_DVT_TEAM_PROCESS", teamProcess);
		map.put("P_TOTAL_TIME", totalTimeN);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_COMUNICATION.getAllComunicationInDay", map);
	}*/
/*
	@Override
	public VAlRbLossComunication selectByID(int id) {
		VAlRbLossComunication key = new VAlRbLossComunication();
        key.setId(id);
        VAlRbLossComunication record = (VAlRbLossComunication) getSqlMapClientTemplate().queryForObject("V_AL_RB_LOSS_COMUNICATION.selectByPrimaryKey", key);
        return record;
	}
	@Override
	public int deleteByPrimaryKey(Integer id) {
		VAlRbLossComunication key = new VAlRbLossComunication();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("V_AL_RB_LOSS_COMUNICATION.deleteByPrimaryKey", key);
        return rows;
	}*/
    @Override
	public int deleteByPrimaryKey(Integer id) {
        Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", id);
		int rows = getSqlMapClientTemplate().delete("V_AL_RB_LOSS_COMUNICATION.deleteByPrimaryKey", parms);
		return rows;
	}
	@SuppressWarnings("unchecked")
	@Override
	public VAlRbLossComunication selectByID(int id) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID",id);
		parms.put("P_DATA", null);
		List<VAlRbLossComunication> recordList = getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_COMUNICATION.selectByPrimaryKey", parms);
		VAlRbLossComunication record = new VAlRbLossComunication();
		if (recordList.size()>0)
		{
			record = recordList.get(0);
		}
        return record;
	}
	@Override
	public int update(VAlRbLossComunication vAlRbLossComunication) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", vAlRbLossComunication.getId());
		parms.put("P_BSCID", vAlRbLossComunication.getBscid());
		parms.put("P_DIP", vAlRbLossComunication.getDip());
		parms.put("P_SDATE", vAlRbLossComunication.getSdate());
		parms.put("P_EDATE", vAlRbLossComunication.getEdate());
		parms.put("P_DVT_TEAM_PROCESS", vAlRbLossComunication.getDvtTeamProcess());
		parms.put("P_DVT_USER_PROCESS", vAlRbLossComunication.getDvtUserProcess());
		parms.put("P_UNG_CUU_MPD", vAlRbLossComunication.getUngCuuMpd());
		parms.put("P_CAUSEBY", vAlRbLossComunication.getCauseby());
		parms.put("P_ACTION_PROCESS", vAlRbLossComunication.getActionProcess());
		parms.put("P_SHIFT_ID", vAlRbLossComunication.getShiftId());
		parms.put("P_ALARM_ID", vAlRbLossComunication.getAlarmId());
        int rows = getSqlMapClientTemplate().update("V_AL_RB_LOSS_COMUNICATION.update", parms);
        return rows;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<VAlRbLossComunication> getAllComunicationInDay(String day,
			String bscid, String dip, String teamProcess,
			String dvtUserProcess, int totalTimeFN, int totalTimeEN,
			String statusKT, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", day);
		map.put("P_BSCID", bscid);
		map.put("P_DIP", dip);
		map.put("P_DVT_TEAM_PROCESS", teamProcess);
		map.put("P_DVT_USER_PROCESS", dvtUserProcess);
		map.put("P_TOTAL_TIME_F", totalTimeFN);
		map.put("P_TOTAL_TIME_E", totalTimeEN);
		map.put("P_STATUS", statusKT);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_COMUNICATION.getAllComunicationInDay", map);
	}

	@SuppressWarnings({ "unchecked"})
	@Override
	public List<SYS_PARAMETER> titleLossCommunication(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_COMUNICATION.titleLossCommunication", map);
	}
}