package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.RAlarmLogIpbb;

public class RAlarmLogIpbbDAOImpl extends SqlMapClientDaoSupport implements RAlarmLogIpbbDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table R_ALARM_LOG_IPBB
     *
     * @ibatorgenerated Wed Jun 18 08:58:34 ICT 2014
     */
    public RAlarmLogIpbbDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table R_ALARM_LOG_IPBB
     *
     * @ibatorgenerated Wed Jun 18 08:58:34 ICT 2014
     */
    public void insert(RAlarmLogIpbb record) {
        getSqlMapClientTemplate().insert("R_ALARM_LOG_IPBB.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table R_ALARM_LOG_IPBB
     *
     * @ibatorgenerated Wed Jun 18 08:58:34 ICT 2014
     */
    public void insertSelective(RAlarmLogIpbb record) {
        getSqlMapClientTemplate().insert("R_ALARM_LOG_IPBB.ibatorgenerated_insertSelective", record);
    }
 // Tab tong hop
    @SuppressWarnings("unchecked")
	@Override
	public List<RAlarmLogIpbb> getAlarmLogIpbb(
			String function,
			String startDate, 
			String endDate, 
			String host,
			String username,
			Integer startRecord, 
			Integer endRecord, 
			String sortfield, 
			String sortorder, 
			String strWhere) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_FUNCTION", function);
		parms.put("P_START_DATE", startDate);
		parms.put("P_END_DATE", endDate);
		parms.put("P_HOST", host);
		parms.put("P_USER_NAME", username); 
		parms.put("P_START_RECORD", startRecord);
		parms.put("P_END_RECORD", endRecord);
		parms.put("P_SOFT_FIELD", sortfield);
		parms.put("P_SOFT_ORDER", sortorder);
		parms.put("P_STR_WHERE", strWhere);
		parms.put("P_DATA", null);	
		return getSqlMapClientTemplate().queryForList("R_ALARM_LOG_IPBB.getAlarmLogIpbb", parms);
	}
    
    @Override
    public int countAlarmLogIpbb(
    		String function,
    		String startDate, 
			String endDate, 
			String host,
			String username,
			String strWhere){
    	
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_FUNCTION", function);
    	map.put("P_START_DATE", startDate);
    	map.put("P_END_DATE", endDate);
    	map.put("P_HOST", host);
    	map.put("P_USER_NAME", username); 
    	map.put("P_STR_WHERE", strWhere);
    	map.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("R_ALARM_LOG_IPBB.countAlarmLogIpbb", map);
    	Integer record = (Integer) map.get("P_DATA");
    	return record;
    }
}