package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.AsImportWarehouse;
import vo.AssetsManagements;
import vo.AssetsTypes;
import vo.SYS_PARAMETER;
import vo.alarm.utils.AssetsManagementsFilter;

public class AssetsManagementsDAOImpl extends SqlMapClientDaoSupport implements AssetsManagementsDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public AssetsManagementsDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        AssetsManagements key = new AssetsManagements();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("ASSETS_MANAGEMENTS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public void insert(AssetsManagements record) {
        getSqlMapClientTemplate().insert("ASSETS_MANAGEMENTS.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public void insertSelective(AssetsManagements record) {
        getSqlMapClientTemplate().insert("ASSETS_MANAGEMENTS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public AssetsManagements selectByPrimaryKey(Integer id) {
        AssetsManagements key = new AssetsManagements();
        key.setId(id);
        AssetsManagements record = (AssetsManagements) getSqlMapClientTemplate().queryForObject("ASSETS_MANAGEMENTS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    public AssetsManagements selectByProductCode(String productCode) {
        AssetsManagements key = new AssetsManagements();
        key.setProductCode(productCode);
        AssetsManagements record = (AssetsManagements) getSqlMapClientTemplate().queryForObject("ASSETS_MANAGEMENTS.selectByProductCode", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public int updateByPrimaryKeySelective(AssetsManagements record) {
        int rows = getSqlMapClientTemplate().update("ASSETS_MANAGEMENTS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ASSETS_MANAGEMENTS
     *
     * @ibatorgenerated Mon Apr 22 15:55:02 ICT 2013
     */
    public int updateByPrimaryKey(AssetsManagements record) {
        int rows = getSqlMapClientTemplate().update("ASSETS_MANAGEMENTS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<AssetsManagements> getList(AssetsManagementsFilter filter,String column, int order){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("p_assetsName", filter.getAssetsName());
		map.put("p_asTypesId", filter.getAsTypesId());
		map.put("p_asTypesName", filter.getAsTypesName());
		map.put("p_productCode",filter.getProductCode());
		map.put("p_serialNo", filter.getSerialNo()); 
		
		map.put("p_COLUMN", column);
		map.put("p_ORDER", order);
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("ASSETS_MANAGEMENTS.getList", map);

	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<AssetsTypes> getAsTypesName(){
		Map<String, Object> map = new HashMap<String, Object>(); 
		
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("ASSETS_MANAGEMENTS.getAsTypesName", map);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeForm){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("TYPE_FORM", typeForm);
		
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("ASSETS_MANAGEMENTS.titleForm", map);
	} 
	
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> unitList(){
		Map<String, Object> map = new HashMap<String, Object>();
		
		map.put("p_DATA", null);
		return getSqlMapClientTemplate().queryForList("ASSETS_MANAGEMENTS.unitList", map);
	}
	
	@Override
    public int getCountAssetsTypes(String asTypesId){
    	
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_AS_TYPES_ID", asTypesId);
		map.put("P_DATA", null);
    	getSqlMapClientTemplate().queryForObject("ASSETS_MANAGEMENTS.getCountAssetsTypes", map);
    	Integer record = (Integer) map.get("P_DATA");
    	return record;
    }
	
	@SuppressWarnings("unchecked")
    @Override
	public List<AsImportWarehouse> updateProName(String productCode, String productName, String unit, String modifiedBy) {
    	Map<String, Object> map = new HashMap<String, Object>();
    	map.put("P_PRODUCT_CODE", productCode);
    	map.put("P_PRODUCT_NAME", productName);
    	map.put("P_UNIT", unit);
		map.put("P_MODIFIED_BY", modifiedBy);
		
		return getSqlMapClientTemplate().queryForList("ASSETS_MANAGEMENTS.updateProName", map);
    }
}