package dao;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.SYS_PARAMETER;
import vo.VAlRbLossAntenna;
import vo.VAlRbLossConfig3G;

public class VAlRbLossAntennaDAOImpl extends SqlMapClientDaoSupport implements VAlRbLossAntennaDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_ANTENNA
     *
     * @ibatorgenerated Wed Dec 19 16:42:49 ICT 2012
     */
    public VAlRbLossAntennaDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_ANTENNA
     *
     * @ibatorgenerated Wed Dec 19 16:42:49 ICT 2012
     */
    public void insert(VAlRbLossAntenna record) {
        getSqlMapClientTemplate().insert("V_AL_RB_LOSS_ANTENNA.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table V_AL_RB_LOSS_ANTENNA
     *
     * @ibatorgenerated Wed Dec 19 16:42:49 ICT 2012
     */
    public void insertSelective(VAlRbLossAntenna record) {
        getSqlMapClientTemplate().insert("V_AL_RB_LOSS_ANTENNA.ibatorgenerated_insertSelective", record);
    }

	@Override
	public int delete(Date stime, String rncid, String alarmLevel, int alarmID) {
		VAlRbLossAntenna key = new VAlRbLossAntenna();
        key.setSdate(stime);
        key.setRncid(rncid);
        key.setAlarmLevel(alarmLevel);
        key.setFmAlarmId(alarmID);
        int rows = getSqlMapClientTemplate().delete("V_AL_RB_LOSS_ANTENNA.deleteByPrimaryKey", key);
        return rows;
	}

	/*@SuppressWarnings("unchecked")
	@Override
	public List<VAlRbLossAntenna> getLossAntennaList(String startTime,
			String rncid, String alarmLevel, int totalTime,
			String dvtTeamProcess, String sector, String antenError,
			String statusKTMCH, String column, int order) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startTime);
		map.put("P_RNCID", rncid);
		map.put("P_ALARM_LEVEL", alarmLevel);
		map.put("P_SECTOR", sector);
		map.put("P_ANTEN_ERROR", antenError);
		map.put("P_DVT_TEAM_PROCESS", dvtTeamProcess);
		map.put("P_DURATION", totalTime);
		map.put("P_statusKTMCH", statusKTMCH);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_ANTENNA.getLossAntennaList", map);
	}*/

	@Override
	public VAlRbLossAntenna selectByMore(Date stime, String rncid,
			String alarmLevel, int alarmID) {
		VAlRbLossAntenna key = new VAlRbLossAntenna();
        key.setSdate(stime);
        key.setRncid(rncid);
        key.setAlarmLevel(alarmLevel);
        key.setFmAlarmId(alarmID);
        VAlRbLossAntenna record = (VAlRbLossAntenna) getSqlMapClientTemplate().queryForObject("V_AL_RB_LOSS_ANTENNA.selectByPrimaryKey", key);
        return record;
	}

	@Override
	public int update(VAlRbLossAntenna vAlRbLossAntenna) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_ID", vAlRbLossAntenna.getId());
		parms.put("P_SDATE", vAlRbLossAntenna.getSdate());
		parms.put("P_EDATE", vAlRbLossAntenna.getEdate());
		parms.put("P_RNCID", vAlRbLossAntenna.getRncid());
		parms.put("P_ALARM_LEVEL", vAlRbLossAntenna.getAlarmLevel());
		parms.put("P_SECTOR", vAlRbLossAntenna.getSector());
		parms.put("P_ANTEN_ERROR", vAlRbLossAntenna.getAntenError());
		parms.put("P_DVT_TEAM_PROCESS", vAlRbLossAntenna.getDvtTeamProcess());
		parms.put("P_DVT_USER_PROCESS", vAlRbLossAntenna.getDvtUserProcess());
		parms.put("P_CAUSEBY", vAlRbLossAntenna.getCauseby());
		parms.put("P_ACTION_PROCESS", vAlRbLossAntenna.getActionProcess());
		parms.put("P_DESCRIPTION", vAlRbLossAntenna.getDescription());
		parms.put("P_SHIFT_ID", vAlRbLossAntenna.getShiftId());
		parms.put("P_FM_ALARM_ID", vAlRbLossAntenna.getFmAlarmId());

        int rows = getSqlMapClientTemplate().update("V_AL_RB_LOSS_ANTENNA.update", parms);
        return rows;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<VAlRbLossAntenna> getLossAntennaList(String startTime,
			String rncid, String alarmLevel, int totalTime, int totalTimeE,
			String dvtTeamProcess, String dvtUserProcess, String sector,
			String antenError, String statusKTMCH, String column, int order) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startTime);
		map.put("P_RNCID", rncid);
		map.put("P_ALARM_LEVEL", alarmLevel);
		map.put("P_SECTOR", sector);
		map.put("P_ANTEN_ERROR", antenError);
		map.put("P_DVT_TEAM_PROCESS", dvtTeamProcess);
		map.put("P_DVT_USER_PROCESS", dvtUserProcess);
		map.put("P_DURATION", totalTime);
		map.put("P_DURATION_E", totalTimeE);
		map.put("P_statusKTMCH", statusKTMCH);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_ANTENNA.getLossAntennaList", map);
	
	}

	@Override
	public VAlRbLossAntenna selectByID(int id) {
		VAlRbLossAntenna key = new VAlRbLossAntenna();
        key.setId(id);
        VAlRbLossAntenna record = (VAlRbLossAntenna) getSqlMapClientTemplate().queryForObject("V_AL_RB_LOSS_ANTENNA.selectByPrimaryKey", key);
        return record;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleAntenna(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("V_AL_RB_LOSS_ANTENNA.titleAntenna", map);
	}
}