package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.QldnThongTinTram;

public class QldnThongTinTramDAOImpl extends SqlMapClientDaoSupport implements QldnThongTinTramDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public QldnThongTinTramDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public int deleteByPrimaryKey(String idTram) {
        QldnThongTinTram key = new QldnThongTinTram();
        key.setIdTram(idTram);
        int rows = getSqlMapClientTemplate().delete("QLDN_THONG_TIN_TRAM.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public void insert(QldnThongTinTram record) {
        getSqlMapClientTemplate().insert("QLDN_THONG_TIN_TRAM.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public void insertSelective(QldnThongTinTram record) {
        getSqlMapClientTemplate().insert("QLDN_THONG_TIN_TRAM.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public QldnThongTinTram selectByPrimaryKey(String idTram) {
        QldnThongTinTram key = new QldnThongTinTram();
        key.setIdTram(idTram);
        QldnThongTinTram record = (QldnThongTinTram) getSqlMapClientTemplate().queryForObject("QLDN_THONG_TIN_TRAM.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public int updateByPrimaryKeySelective(QldnThongTinTram record) {
        int rows = getSqlMapClientTemplate().update("QLDN_THONG_TIN_TRAM.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table QLDN_THONG_TIN_TRAM
     *
     * @ibatorgenerated Tue Jul 04 15:51:54 ICT 2017
     */
    public int updateByPrimaryKey(QldnThongTinTram record) {
        int rows = getSqlMapClientTemplate().update("QLDN_THONG_TIN_TRAM.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<QldnThongTinTram> getThongTinTramList(String idTram,String loaitram,String daiVT,String dienDvth,String makh,String username) {
		
		Map<String, String> map = new HashMap<String, String>();
		map.put("P_ID_TRAM", idTram);
		map.put("P_LOAITRAM", loaitram);
		map.put("P_NHOM", daiVT);
		map.put("P_DIEN_DVTH", dienDvth);
		map.put("P_MAKH", makh);
		map.put("P_USERNAME", username);
		map.put("p_data", null);
		return getSqlMapClientTemplate().queryForList("QLDN_THONG_TIN_TRAM.getThongTinTramList", map);
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<QldnThongTinTram> getDSTramTTDien(String trangThai, String tinh,
			String huyen, String tgttTqTK, String thangQuyTtTK, String namTtTK,
			String username, String type) {
		Map<String, String> map = new HashMap<String, String>();
		map.put("P_TRANG_THAI_TT", trangThai);
		map.put("P_TINH", tinh);
		map.put("P_HUYEN", huyen);
		map.put("P_TGTTTQ", tgttTqTK);
		map.put("P_THANGQUYTT", thangQuyTtTK);
		map.put("P_NAMTT", namTtTK);
		map.put("P_USERNAME", username);
		map.put("P_TYPE", type);
		map.put("p_data", null);
		return getSqlMapClientTemplate().queryForList("QLDN_THONG_TIN_TRAM.getDSTramTTDien", map);
	}
    /* lay danh sach thong tin tram  thanh toan thanh toan nhieu ky. ANHCTV:30/08/2017*/
    @SuppressWarnings("unchecked")
	@Override
    public List<QldnThongTinTram> getTTNhieuKyList(String tinh, String loaitram, String nguonccd, String httt, String nguoittdien,
			    String dgLoai, String makh, String idTram, String thangquy, String nam, String thangquy_t, String nam_t)
	 {
		 Map<String, Object> parms = new HashMap<String, Object>();
		    parms.put("p_tinh", tinh);
		    parms.put("p_loaitram", loaitram);
		    parms.put("p_nguonccd", nguonccd);
		    parms.put("p_httt", httt);
		    parms.put("p_nguoittdien", nguoittdien);
		    parms.put("p_dgLoai", dgLoai);
		    parms.put("p_makh", makh);
		    parms.put("p_idTram", idTram);
		    parms.put("p_thangquy_f", thangquy);
		    parms.put("p_nam_f", nam);
		    parms.put("p_thangquy_t", thangquy_t);
		    parms.put("p_nam_t", nam_t);
		    parms.put("p_data", null);
		    	
		    
		    List<QldnThongTinTram> record = getSqlMapClientTemplate().queryForList("QLDN_THONG_TIN_TRAM.getTTNhieuKyList", parms);
	     return record;
	 }
    
    
    @SuppressWarnings("unchecked")
	@Override
	public QldnThongTinTram getTramByMaKH(String makh, String soct) {
		Map<String, Object> parms = new HashMap<String, Object>();
	    parms.put("p_makh", makh);
	    parms.put("p_soct", soct);
	    parms.put("p_data", null);
	    QldnThongTinTram record = new QldnThongTinTram();
	    List<QldnThongTinTram> recordList = getSqlMapClientTemplate().queryForList("QLDN_THONG_TIN_TRAM.getTramByMaKH", parms);
	    if (recordList.size()>0) {
	    	record= recordList.get(0);
	    }
	    return record;
	}

	@Override
	public QldnThongTinTram selectByMaKH(String makh) {
		 QldnThongTinTram key = new QldnThongTinTram();
	        key.setMakh(makh);
	        QldnThongTinTram record = (QldnThongTinTram) getSqlMapClientTemplate().queryForObject("QLDN_THONG_TIN_TRAM.selectByMaKH", key);
	        return record;
	}
//cap nhat cac thong tin tram tu datasite. AnhCTV:25/12/2017
	@Override
	public int updateInforDatasite(String siteList) {
		Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_SITE_LIST", siteList);
   		int rows = getSqlMapClientTemplate().update("QLDN_THONG_TIN_TRAM.updateInforDatasite", parms);
     return rows;
	}
	// lay thong tin tim kiem cho form thong tin tram. AnhCTV:25/12/2017s
	@SuppressWarnings("unchecked")
	@Override
	public List<String> getFilterThongTinTramList(String tableColumn, String username) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TABLE_COLUMN", tableColumn);
		map.put("P_USERNAME", username);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("QLDN_THONG_TIN_TRAM.getFilterThongTinTramList", map);
	}

	@Override
	public int updateByMaKH(QldnThongTinTram record) {
		int rows = getSqlMapClientTemplate().update("QLDN_THONG_TIN_TRAM.updateByMaKH", record);
        return rows;
	}

	@Override
	public int updateDinhMuc(String monF, String yearF, String monT, String yearT) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_THANGQUY_FROM", monF);
		map.put("P_NAM_FROM", yearF);
		map.put("P_THANGQUY_TO", monT);
		map.put("P_NAM_TO", yearT);
		map.put("P_DATA", null);
		int rows = getSqlMapClientTemplate().update("QLDN_THONG_TIN_TRAM.updateDinhMuc", map);
		return rows;
	}


}