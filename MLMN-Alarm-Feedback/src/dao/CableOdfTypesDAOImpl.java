package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.CableOdfTypes;

public class CableOdfTypesDAOImpl extends SqlMapClientDaoSupport implements CableOdfTypesDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public CableOdfTypesDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        CableOdfTypes key = new CableOdfTypes();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("CABLE_ODF_TYPES.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public void insert(CableOdfTypes record) {
        getSqlMapClientTemplate().insert("CABLE_ODF_TYPES.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public void insertSelective(CableOdfTypes record) {
        getSqlMapClientTemplate().insert("CABLE_ODF_TYPES.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public CableOdfTypes selectByPrimaryKey(Integer id) {
        CableOdfTypes key = new CableOdfTypes();
        key.setId(id);
        CableOdfTypes record = (CableOdfTypes) getSqlMapClientTemplate().queryForObject("CABLE_ODF_TYPES.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    @Override
    public CableOdfTypes selectBySchemaName(String schemaName) {
        CableOdfTypes key = new CableOdfTypes();
        key.setSchemaName(schemaName);
        CableOdfTypes record = (CableOdfTypes) getSqlMapClientTemplate().queryForObject("CABLE_ODF_TYPES.ibatorgenerated_selectBySchemaName", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public int updateByPrimaryKeySelective(CableOdfTypes record) {
        int rows = getSqlMapClientTemplate().update("CABLE_ODF_TYPES.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_ODF_TYPES
     *
     * @ibatorgenerated Wed Apr 03 10:05:29 ICT 2013
     */
    public int updateByPrimaryKey(CableOdfTypes record) {
        int rows = getSqlMapClientTemplate().update("CABLE_ODF_TYPES.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @Override
    @SuppressWarnings("unchecked")
    public List<CableOdfTypes> getCableOdfTypesFilter(String schemaName, String column, String order){
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SCHEMA_NAME", schemaName);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("CABLE_ODF_TYPES.getCableOdfTypesFilter", map);
    }
    
    @Override
    @SuppressWarnings("unchecked")
    public List<CableOdfTypes> getCableOdfTypesList(){
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("CABLE_ODF_TYPES.getCableOdfTypesList", map);
    }
}