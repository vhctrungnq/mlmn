package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.ImportMapping;
import vo.SYS_PARAMETER;
import vo.alarm.utils.ImportMappingFilter;

public class ImportMappingDAOImpl extends SqlMapClientDaoSupport implements ImportMappingDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public ImportMappingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public int deleteByPrimaryKey(Integer patternId, String rawTable, String tableColumn) {
        ImportMapping key = new ImportMapping();
        key.setPatternId(patternId);
        key.setRawTable(rawTable);
        key.setTableColumn(tableColumn);
        int rows = getSqlMapClientTemplate().delete("I_IMPORT_MAPPING.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public void insert(ImportMapping record) {
        getSqlMapClientTemplate().insert("I_IMPORT_MAPPING.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public void insertSelective(ImportMapping record) {
        getSqlMapClientTemplate().insert("I_IMPORT_MAPPING.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public ImportMapping selectByPrimaryKey(Integer patternId, String rawTable, String tableColumn) {
        ImportMapping key = new ImportMapping();
        key.setPatternId(patternId);
        key.setRawTable(rawTable);
        key.setTableColumn(tableColumn);
        ImportMapping record = (ImportMapping) getSqlMapClientTemplate().queryForObject("I_IMPORT_MAPPING.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public int updateByPrimaryKeySelective(ImportMapping record) {
        int rows = getSqlMapClientTemplate().update("I_IMPORT_MAPPING.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table I_IMPORT_MAPPING
     *
     * @ibatorgenerated Thu Feb 21 16:03:45 ICT 2013
     */
    public int updateByPrimaryKey(ImportMapping record) {
        int rows = getSqlMapClientTemplate().update("I_IMPORT_MAPPING.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    @SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleImportMapping(String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_TYPE_FORM", typeForm);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("I_IMPORT_MAPPING.titleImportMapping", map);
	
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<ImportMapping> getImportMappingList(ImportMappingFilter filter,
			String column, int order) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_RAW_TABLE", filter.getRawTable());
		map.put("P_FILE_PATTERN", filter.getFilePattern());
		map.put("P_FILE_COLUMN_HEADER", filter.getFileColumnHeader());
		map.put("P_TABLE_COLUMN", filter.getTableColumn());
		map.put("P_STATUS", filter.getStatus());
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("I_IMPORT_MAPPING.getImportMappingList", map);

	}
}