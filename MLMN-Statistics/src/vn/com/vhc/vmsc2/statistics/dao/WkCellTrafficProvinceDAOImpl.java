package vn.com.vhc.vmsc2.statistics.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vn.com.vhc.vmsc2.statistics.domain.WkCellTrafficProvince;

public class WkCellTrafficProvinceDAOImpl extends SqlMapClientDaoSupport implements WkCellTrafficProvinceDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public WkCellTrafficProvinceDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public int deleteByPrimaryKey(String province, Integer week, Integer year) {
        WkCellTrafficProvince key = new WkCellTrafficProvince();
        key.setProvince(province);
        key.setWeek(week);
        key.setYear(year);
        int rows = getSqlMapClientTemplate().delete("WK_CELL_TRAFFIC_PROVINCE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public void insert(WkCellTrafficProvince record) {
        getSqlMapClientTemplate().insert("WK_CELL_TRAFFIC_PROVINCE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public void insertSelective(WkCellTrafficProvince record) {
        getSqlMapClientTemplate().insert("WK_CELL_TRAFFIC_PROVINCE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public WkCellTrafficProvince selectByPrimaryKey(String province, Integer week, Integer year) {
        WkCellTrafficProvince key = new WkCellTrafficProvince();
        key.setProvince(province);
        key.setWeek(week);
        key.setYear(year);
        WkCellTrafficProvince record = (WkCellTrafficProvince) getSqlMapClientTemplate().queryForObject("WK_CELL_TRAFFIC_PROVINCE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public int updateByPrimaryKeySelective(WkCellTrafficProvince record) {
        int rows = getSqlMapClientTemplate().update("WK_CELL_TRAFFIC_PROVINCE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_PROVINCE
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public int updateByPrimaryKey(WkCellTrafficProvince record) {
        int rows = getSqlMapClientTemplate().update("WK_CELL_TRAFFIC_PROVINCE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@SuppressWarnings("unchecked")
	public List<WkCellTrafficProvince> filter(String province, Integer startWeek, Integer startYear, Integer endWeek, Integer endYear) {
		Map<String, String> map = new HashMap<String, String>();
		map.put("province", province);
		map.put("startWeek", Integer.toString(startWeek));
		map.put("endWeek", Integer.toString(endWeek));
		map.put("startYear", Integer.toString(startYear));
		map.put("endYear", Integer.toString(endYear));
    	return getSqlMapClientTemplate().queryForList("WK_CELL_TRAFFIC_PROVINCE.filter", map);
	}
}