package vn.com.vhc.vmsc2.statistics.dao;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vn.com.vhc.vmsc2.statistics.domain.Role;
import vn.com.vhc.vmsc2.statistics.domain.UserRole;

public class UserRoleDAOImpl extends SqlMapClientDaoSupport implements UserRoleDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table A_USER_ROLE
     *
     * @ibatorgenerated Tue Jan 04 10:34:51 ICT 2011
     */
    public UserRoleDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table A_USER_ROLE
     *
     * @ibatorgenerated Tue Jan 04 10:34:51 ICT 2011
     */
    public int deleteByPrimaryKey(String roleId, Integer userId) {
        UserRole key = new UserRole();
        key.setRoleId(roleId);
        key.setUserId(userId);
        int rows = getSqlMapClientTemplate().delete("A_USER_ROLE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table A_USER_ROLE
     *
     * @ibatorgenerated Tue Jan 04 10:34:51 ICT 2011
     */
    public void insert(UserRole record) {
        getSqlMapClientTemplate().insert("A_USER_ROLE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table A_USER_ROLE
     *
     * @ibatorgenerated Tue Jan 04 10:34:51 ICT 2011
     */
    public void insertSelective(UserRole record) {
        getSqlMapClientTemplate().insert("A_USER_ROLE.ibatorgenerated_insertSelective", record);
    }
    
    @SuppressWarnings("unchecked")
	public List<Role> getByUser(Integer userId) {
		return getSqlMapClientTemplate().queryForList("A_USER_ROLE.getByUser", userId);
	}
	public void deleteByUser(Integer userId) {
		getSqlMapClientTemplate().delete("A_USER_ROLE.deleteByUser", userId);
	}
}