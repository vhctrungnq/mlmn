package vn.com.vhc.vmsc2.statistics.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vn.com.vhc.vmsc2.statistics.domain.HProvincesCode;

public class HProvincesCodeDAOImpl extends SqlMapClientDaoSupport implements HProvincesCodeDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public HProvincesCodeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public int deleteByPrimaryKey(String code, String region) {
        HProvincesCode key = new HProvincesCode();
        key.setCode(code);
        key.setRegion(region);
        int rows = getSqlMapClientTemplate().delete("H_PROVINCES_CODE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
    
    public int deleteById(String id) {
        HProvincesCode key = new HProvincesCode();
        key.setId(Integer.parseInt(id));
        int rows = getSqlMapClientTemplate().delete("H_PROVINCES_CODE.ibatorgenerated_deleteById", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public void insert(HProvincesCode record) {
        getSqlMapClientTemplate().insert("H_PROVINCES_CODE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public void insertSelective(HProvincesCode record) {
        getSqlMapClientTemplate().insert("H_PROVINCES_CODE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public HProvincesCode selectByPrimaryKey(String code, String region) {
        HProvincesCode key = new HProvincesCode();
        key.setCode(code);
        key.setRegion(region);
        HProvincesCode record = (HProvincesCode) getSqlMapClientTemplate().queryForObject("H_PROVINCES_CODE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    public HProvincesCode selectById(String id) {
        HProvincesCode key = new HProvincesCode();
        key.setId(Integer.parseInt(id));
        HProvincesCode record = (HProvincesCode) getSqlMapClientTemplate().queryForObject("H_PROVINCES_CODE.ibatorgenerated_selectById", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public int updateByPrimaryKeySelective(HProvincesCode record) {
        int rows = getSqlMapClientTemplate().update("H_PROVINCES_CODE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table H_PROVINCES_CODE
     *
     * @ibatorgenerated Tue Oct 22 17:44:11 PDT 2013
     */
    public int updateByPrimaryKey(HProvincesCode record) {
        int rows = getSqlMapClientTemplate().update("H_PROVINCES_CODE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    /*@SuppressWarnings("unchecked")
    public List<HProvincesCode> filter(HProvincesCode filter) {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.filter", filter);
	}*/
    
    @SuppressWarnings("unchecked")
	public List<HProvincesCode> getHProvincesCodeFilter(String dept, String code, String branch, String location, String province, 
			String district,  String column, String order){
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DEPT", dept);
		parms.put("P_CODE", code);
		parms.put("P_BRANCH", branch);
		parms.put("P_LOCATION", location);
		parms.put("P_PROVINCE", province);
		parms.put("P_DISTRICT", district);
		parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getHProvincesCodeFilter", parms);
	}

	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getAllProvince() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllProvince");
	}
	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getAllLocation() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllLocation");
	}

	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getAllBranch() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllBranch");
	}

	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getAllDistrict() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllDistrict");
	}
	
	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getAllRegion() {
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getAllRegion");
	}
	
	public HProvincesCode chekExitToDistrict(String region, String location, String province, String district) {
		HProvincesCode key = new HProvincesCode();
        key.setRegion(region);
        key.setLocation(location);
        key.setProvince(province);
        key.setDistrict(district);
        HProvincesCode record = (HProvincesCode) getSqlMapClientTemplate().queryForObject("H_PROVINCES_CODE.chekExitToDistrict", key);
        return record;
	}
	
	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getHProvincesCodeList(String province) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_PROVINCE", province);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getHProvincesCodeList", map);
	}
	
	@SuppressWarnings("unchecked")
	public List<HProvincesCode> checkUniqueProvinceCode(String code, String region, String id) {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_CODE", code);
		parms.put("P_REGION", region);
		parms.put("P_ID", id);
		parms.put("P_DATA", null);
		
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.checkUniqueProvinceCode", parms);
	}
	
	public int updateById(HProvincesCode record) {
        int rows = getSqlMapClientTemplate().update("H_PROVINCES_CODE.ibatorgenerated_updateById", record);
        return rows;
    }
	
	@SuppressWarnings("unchecked")
	public List<HProvincesCode> getProvinceByRegion(String region){
		HProvincesCode key = new HProvincesCode();
		key.setRegion(region);
		return getSqlMapClientTemplate().queryForList("H_PROVINCES_CODE.getProvinceByRegion", key);
	}
}