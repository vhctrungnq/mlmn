package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.SYS_PARAMETER;
import vo.SysStandardizedError;

public class SysStandardizedErrorDAOImpl extends SqlMapClientDaoSupport implements SysStandardizedErrorDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public SysStandardizedErrorDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public int deleteByPrimaryKey(Integer id) {
        SysStandardizedError key = new SysStandardizedError();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("SYS_STANDARDIZED_ERROR.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public void insert(SysStandardizedError record) {
        getSqlMapClientTemplate().insert("SYS_STANDARDIZED_ERROR.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public void insertSelective(SysStandardizedError record) {
        getSqlMapClientTemplate().insert("SYS_STANDARDIZED_ERROR.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public SysStandardizedError selectByPrimaryKey(Integer id) {
        SysStandardizedError key = new SysStandardizedError();
        key.setId(id);
        SysStandardizedError record = (SysStandardizedError) getSqlMapClientTemplate().queryForObject("SYS_STANDARDIZED_ERROR.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public int updateByPrimaryKeySelective(SysStandardizedError record) {
        int rows = getSqlMapClientTemplate().update("SYS_STANDARDIZED_ERROR.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_STANDARDIZED_ERROR
     *
     * @ibatorgenerated Mon Sep 28 15:47:42 ICT 2015
     */
    public int updateByPrimaryKey(SysStandardizedError record) {
        int rows = getSqlMapClientTemplate().update("SYS_STANDARDIZED_ERROR.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleSysStandardizedError(String type) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_TYPE", type);
		parms.put("P_DATA", null);
		
    	return getSqlMapClientTemplate().queryForList("SYS_STANDARDIZED_ERROR.titleSysStandardizedError", parms);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SysStandardizedError> getStandardizedErrorFilter(String vendor, String network,
			String alarmName, String column, String order) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_VENDOR", vendor);
    	parms.put("P_NETWORK", network);
    	parms.put("P_ALARM_NAME", alarmName);
    	parms.put("P_COLUMN", column);
		parms.put("P_ORDER", order);
		parms.put("P_DATA", null);
		
    	return getSqlMapClientTemplate().queryForList("SYS_STANDARDIZED_ERROR.getStandardizedErrorFilter", parms);
	}

	@Override
	public int insertStandardError(SysStandardizedError standard) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_VENDOR", standard.getVendor());
    	parms.put("P_NETWORK", standard.getNetwork());
    	parms.put("P_ALARM_NAME", standard.getAlarmName());
    	parms.put("P_ALARM_NAME_MAPPING", standard.getAlarmNameMapping());
		parms.put("P_DESCRIPTION", standard.getDescription());
		parms.put("P_ODERING", standard.getOrdering());
		parms.put("P_CREATEDBY", standard.getCreatedBy());
		int rows = getSqlMapClientTemplate().update("SYS_STANDARDIZED_ERROR.insertStandardError", parms);
        return rows;
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SysStandardizedError> getStandardName(String vendor,
			String network) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_VENDOR", vendor);
    	parms.put("P_NETWORK", network);
		parms.put("P_DATA", null);
		
    	return getSqlMapClientTemplate().queryForList("SYS_STANDARDIZED_ERROR.getStandardName", parms);
	}
}