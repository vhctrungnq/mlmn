package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.AlDyRpFlutterPower;
import vo.AlRpFlutter3Day;
import vo.SYS_PARAMETER;
import vo.VAlDyRpErrorPower;
import vo.WarningDipSame;

public class AlDyRpFlutterPowerDAOImpl extends SqlMapClientDaoSupport implements
		AlDyRpFlutterPowerDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table AL_DY_RP_FLUTTER_POWER
	 * 
	 * @ibatorgenerated Tue Dec 04 14:55:42 ICT 2012
	 */
	public AlDyRpFlutterPowerDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table AL_DY_RP_FLUTTER_POWER
	 * 
	 * @ibatorgenerated Tue Dec 04 14:55:42 ICT 2012
	 */
	public void insert(AlDyRpFlutterPower record) {
		getSqlMapClientTemplate().insert(
				"AL_DY_RP_FLUTTER_POWER.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table AL_DY_RP_FLUTTER_POWER
	 * 
	 * @ibatorgenerated Tue Dec 04 14:55:42 ICT 2012
	 */
	public void insertSelective(AlDyRpFlutterPower record) {
		getSqlMapClientTemplate().insert(
				"AL_DY_RP_FLUTTER_POWER.ibatorgenerated_insertSelective",
				record);
	}

/*	@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpFlutterPower> getVAlDyRpFlutterPowerFilter(String startDate, String endDate,
			String bscid, String site, String teamProcess, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startDate);
		map.put("P_EDATE", endDate);
		map.put("P_BSCID", bscid);
		map.put("P_SITE", site);
		map.put("P_TEAM_PROCESS", teamProcess);	
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.getVAlDyRpFlutterPowerFilter", map);
	}*/

	/*@Override
	public int deleteByPrimaryKey(Integer id) {
		AlDyRpFlutterPower key = new AlDyRpFlutterPower();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"AL_DY_RP_FLUTTER_POWER.deleteByPrimaryKey", key);
		return rows;
	}

	@Override
	public AlDyRpFlutterPower selectByPrimaryKey(int id) {
		AlDyRpFlutterPower key = new AlDyRpFlutterPower();
		key.setId(id);
		AlDyRpFlutterPower record = (AlDyRpFlutterPower) getSqlMapClientTemplate().queryForObject("AL_DY_RP_FLUTTER_POWER.selectByPrimaryKey",key);
		return record;
	}
*/
	@Override
   	public int deleteByPrimaryKey(Integer id) {
           Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_ID", id);
   		int rows = getSqlMapClientTemplate().delete("AL_DY_RP_FLUTTER_POWER.deleteByPrimaryKey", parms);
   		return rows;
   	}
   	@SuppressWarnings("unchecked")
   	@Override
   	public AlDyRpFlutterPower selectByPrimaryKey(int id) {
   		Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_ID",id);
   		parms.put("P_DATA", null);
   		List<AlDyRpFlutterPower> recordList = getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.selectByPrimaryKey", parms);
   		AlDyRpFlutterPower record = new AlDyRpFlutterPower();
   		if (recordList.size()>0)
   		{
   			record = recordList.get(0);
   		}
           return record;
   	}
	@Override
	public int updateByPrimaryKeySelective(AlDyRpFlutterPower record) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", record.getId());
		map.put("P_BSCID", record.getBscid());
		map.put("P_SITE", record.getSite());
		map.put("P_DAY", record.getDay());
		map.put("P_TEAM_PROCESS", record.getTeamProcess());
		map.put("P_USER_PROCESS", record.getUserProcess());
		map.put("P_CAUSEBY_CONTENT", record.getCausebyContent());
		map.put("P_RESULT_CONTENT", record.getResultContent());
		
		int rows = getSqlMapClientTemplate().update("AL_DY_RP_FLUTTER_POWER.updateByPrimaryKeySelective", map);
	    return rows;
	}

	/*--------------------------Chập chờn 3 ngày------------------------------*/
	
	@SuppressWarnings("unchecked")
	@Override
	public List<AlRpFlutter3Day> getAllFlutter3Day(String day, String bscid,
			String site, String teamProcess) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DAY", day);
		map.put("P_BSCID", bscid);
		map.put("P_SITE", site);
		map.put("P_TEAM_PROCESS", teamProcess);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.getAllFlutter3Day", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<WarningDipSame> getAlarmSameSystem(String bscID, String device,
			String day) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_BSCID", bscID);
		map.put("P_SITE", device);
		map.put("P_DAY", day);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.getAlarmSameSystem", map);

	}

	@SuppressWarnings("unchecked")
	@Override
	public List<AlDyRpFlutterPower> getVAlDyRpFlutterPowerFilter(
			String startDate, String endDate, String bscid, String site,
			String teamProcess, int totalTimeFN,int totalTimeEN, int itemSl,
			int itemSlE, int order, String column) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_SDATE", startDate);
		map.put("P_EDATE", endDate);
		map.put("P_BSCID", bscid);
		map.put("P_SITE", site);
		map.put("P_TEAM_PROCESS", teamProcess);	
		map.put("P_TOTALTIME_F", totalTimeFN);	
		map.put("P_TOTALTIME_E", totalTimeEN);	
		map.put("P_ITEMS", itemSl);
		map.put("P_ITEMS_E", itemSlE);
		map.put("P_COLUMN", column);
		map.put("P_ORDER", order);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.getVAlDyRpFlutterPowerFilter", map);
	
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleFlutter3Day() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.titleFlutter3Day", map);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleFlutterPower(String typeForm) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("P_TYPE", typeForm);
		parms.put("P_DATA", null);
    	return getSqlMapClientTemplate().queryForList("AL_DY_RP_FLUTTER_POWER.titleFlutterPower", parms);
	}
	
	

}