package vn.com.vhc.vmsc2.statistics.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vn.com.vhc.vmsc2.statistics.domain.WkCellTrafficRegion3g;

public class WkCellTrafficRegion3gDAOImpl extends SqlMapClientDaoSupport implements WkCellTrafficRegion3gDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public WkCellTrafficRegion3gDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public int deleteByPrimaryKey(String region, Integer week, Integer year) {
        WkCellTrafficRegion3g key = new WkCellTrafficRegion3g();
        key.setRegion(region);
        key.setWeek(week);
        key.setYear(year);
        int rows = getSqlMapClientTemplate().delete("WK_CELL_TRAFFIC_REGION_3G.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public void insert(WkCellTrafficRegion3g record) {
        getSqlMapClientTemplate().insert("WK_CELL_TRAFFIC_REGION_3G.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public void insertSelective(WkCellTrafficRegion3g record) {
        getSqlMapClientTemplate().insert("WK_CELL_TRAFFIC_REGION_3G.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public WkCellTrafficRegion3g selectByPrimaryKey(String region, Integer week, Integer year) {
        WkCellTrafficRegion3g key = new WkCellTrafficRegion3g();
        key.setRegion(region);
        key.setWeek(week);
        key.setYear(year);
        WkCellTrafficRegion3g record = (WkCellTrafficRegion3g) getSqlMapClientTemplate().queryForObject("WK_CELL_TRAFFIC_REGION_3G.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public int updateByPrimaryKeySelective(WkCellTrafficRegion3g record) {
        int rows = getSqlMapClientTemplate().update("WK_CELL_TRAFFIC_REGION_3G.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table WK_CELL_TRAFFIC_REGION_3G
     *
     * @ibatorgenerated Tue Jul 05 14:51:42 ICT 2011
     */
    public int updateByPrimaryKey(WkCellTrafficRegion3g record) {
        int rows = getSqlMapClientTemplate().update("WK_CELL_TRAFFIC_REGION_3G.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

	@SuppressWarnings("unchecked")
	public List<WkCellTrafficRegion3g> filter(String region, Integer startWeek, Integer startYear, Integer endWeek, Integer endYear) {
		Map<String, String> map = new HashMap<String, String>();
		map.put("region", region);
		map.put("startWeek", Integer.toString(startWeek));
		map.put("endWeek", Integer.toString(endWeek));
		map.put("startYear", Integer.toString(startYear));
		map.put("endYear", Integer.toString(endYear));
    	return getSqlMapClientTemplate().queryForList("WK_CELL_TRAFFIC_REGION_3G.filter", map);
	}
}