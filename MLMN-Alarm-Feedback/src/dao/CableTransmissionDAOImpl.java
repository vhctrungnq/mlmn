package dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.CableParameter;
import vo.CableTransmission;
import vo.SYS_PARAMETER;

public class CableTransmissionDAOImpl extends SqlMapClientDaoSupport implements CableTransmissionDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public CableTransmissionDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        CableTransmission key = new CableTransmission();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("CABLE_TRANSMISSION.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public void insert(CableTransmission record) {
        getSqlMapClientTemplate().insert("CABLE_TRANSMISSION.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public void insertSelective(CableTransmission record) {
        getSqlMapClientTemplate().insert("CABLE_TRANSMISSION.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public CableTransmission selectByPrimaryKey(Integer id) {
        CableTransmission key = new CableTransmission();
        key.setId(id);
        CableTransmission record = (CableTransmission) getSqlMapClientTemplate().queryForObject("CABLE_TRANSMISSION.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public int updateByPrimaryKeySelective(CableTransmission record) {
        int rows = getSqlMapClientTemplate().update("CABLE_TRANSMISSION.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table CABLE_TRANSMISSION
     *
     * @ibatorgenerated Tue Mar 19 14:49:34 ICT 2013
     */
    public int updateByPrimaryKey(CableTransmission record) {
        int rows = getSqlMapClientTemplate().update("CABLE_TRANSMISSION.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @Override
	public List<CableTransmission> getCableTransmissionFilter(
			CableTransmission cableTransmission, String column, int order, Integer delData) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("directionId", 		cableTransmission.getDirectionId());
    	parms.put("cableId", 			cableTransmission.getCableId());
    	parms.put("vendor", 			cableTransmission.getVendor());
    	parms.put("enSource", 			cableTransmission.getEnSource());
    	parms.put("description", 		cableTransmission.getDescription());
    	parms.put("cardPortSource", 	cableTransmission.getCardPortSource());
    	parms.put("odfSource", 			cableTransmission.getOdfSource());
    	parms.put("typeCarb", 			cableTransmission.getTypeCarb());
    	parms.put("order", 				order);
    	parms.put("column", 			column);
    	parms.put("delData", 			delData);
		parms.put("P_DATA", 			null);
    	
		@SuppressWarnings("unchecked")
		List<CableTransmission> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION.getCableTransmissionFilter", parms);
        return record;
	}

	@Override
	public CableTransmission getCableById(Integer id) {
		
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("id", 				id);
		parms.put("P_DATA", 			null);
    	
		@SuppressWarnings("unchecked")
		List<CableTransmission> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION.getCableById", parms);
        
		if (record != null && record.size() > 0)
			return record.get(0);
		return null;
	}

	@Override
	public List<CableTransmission> getCableTransmissionAll() {
		Map<String, Object> parms = new HashMap<String, Object>();
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<CableTransmission> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION.getCableTransmissionAll", parms);
        return record;
	}

	@Override
	public CableTransmission getCableByCable(CableTransmission cableTransmission) {
		CableTransmission record = (CableTransmission) getSqlMapClientTemplate().queryForObject("CABLE_TRANSMISSION.getCableByCable", cableTransmission);
        return record;
	}
	@SuppressWarnings("unchecked")
	@Override
	public List<SYS_PARAMETER> titleForm(String typeCarb,String typeForm) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("TYPE_CARB", typeCarb);  
		map.put("TYPE_Form", typeForm); 
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION.titleForm", map);
	}

	@Override
	public List<String> getCableTransmissionSearch(String focus,String typeC, String term) {
		Map<String, Object> parms = new HashMap<String, Object>();
    	parms.put("focus", 			focus);
    	parms.put("typeC", 			typeC);
    	parms.put("term", 			term);
		parms.put("P_DATA", null);
    	
		@SuppressWarnings("unchecked")
		List<String> record = getSqlMapClientTemplate().queryForList("CABLE_TRANSMISSION.getCableTransmissionSearch", parms);
        return record;
	}
    
}